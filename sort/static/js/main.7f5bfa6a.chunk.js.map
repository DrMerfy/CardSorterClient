{"version":3,"sources":["icons/thanks-icon.svg","icons/not-found.svg","enviroment.js","staticContent/responseStatus.js","actions/categoryAction.js","actions/api.js","actions/uiAction.js","actions/cardAction.js","debug/Debugconsole.js","elements/Category.js","localization/en-us.js","localization/LocalizedText.js","elements/Card.js","staticContent/cards.js","reducers/indexReducer.js","reducers/cardReducer.js","reducers/categoriesReducer.js","reducers/containerReducer.js","reducers/uiReducer.js","reducers/boardState.js","staticContent/dragConstants.js","elements/components/CardItem.jsx","elements/components/List.jsx","helpers/cardParser.js","elements/containers/ListContainer.jsx","elements/components/CategoryItem.jsx","elements/components/Board.jsx","elements/containers/BoardContainer.jsx","elements/components/Header.jsx","elements/containers/HeaderContainer.jsx","elements/components/MessageScreen.jsx","elements/components/OnBoarding.jsx","elements/containers/OnBoardingContainer.jsx","elements/components/Popup.jsx","elements/containers/PopupContainer.jsx","App.jsx","serviceWorker.js","index.jsx","Store.js","icons/plus.svg"],"names":["module","exports","__webpack_require__","p","enviroment","IS_FETCHING","IS_SENDING","SUCCESS","CREATE_CATEGORY","REMOVE_CATEGORY","RENAME_CATEGORY","NORMALIZE_CATEGORIES","exportString","env","SHOW_DESCRICTION","HIDE_ALL_DESCRIPTIONS","SHOW_TITLE_BOX","HIDE_ALL_BOXES","SAVE_STUDY_ID","SENDING_SORT","SAVE_THANKS_MESSAGE","RENDER_THANKS_MESSAGE","TOOGLE_ON_BOARDING","TOGGLE_POPUP","POPUP_CHANGE_CONTENT","START_SORT","END_SORT","toogleOnBoarding","show","type","payload","showOnBoarding","error","hideAllTitleBoxes","togglePopup","flag","title","popupChangeContent","content","sendingSort","status","response","sendSort","studyID","container","categories","timeStarted","timeEnded","comment","dispatch","seconds","responseStatus","fetch","api","method","headers","Content-Type","body","JSON","stringify","time","then","json","message","ADD_CARD_CATEGORY","REMOVE_CARD_CATEGORY","ADD_CARD_CONTAINER","REMOVE_CARD_CONTAINER","REQUEST_CARDS","requestCards","fetchCards","saveStudyID","cardID","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","cards","Symbol","iterator","next","done","card","value","id","err","return","_len","arguments","length","args","Array","_key","console","log","debugConsole","Category","Object","classCallCheck","this","cardId","push","filter","en_us","addComment","cancel","clickToRename","dropToAdd","dropToCreateCategory","studyNotFound","sumbit","youCanCloseThisTab","localization_LocalizedText","locale","text","enUS","Card","description","staticContent_cards","app","combineReducers","state","action","cardActions","name","assign","notFound","categoryAction","categoryID","Date","now","category","addCard","newState","removeCard","hasOwnProperty","call","L","concat","toConsumableArray","x","ui","uiAction","showingDescription","changeTitle","thanksMessage","renderThanks","popup","initialState","cardsSorted","categoriesCreated","itemTypes","DragSource","beginDrag","props","position","connect","monitor","connectDragSource","dragSource","isDragging","_ref","minimized","onClick","showDescription","classString","react_default","a","createElement","className","List","map","components_CardItem","key","parseCards","cardIDs","cardsArr","ListContainer","DropTarget","drop","getItem","onCardDrop","connectDropTarget","dropTarget","isOver","showTitleBox","onTitleClick","onTitleChange","onTitleFinish","descriptionID","defaultValue","onChange","e","onKeyPress","stopPropagation","src","plusImage","event","didDrop","onDrop","removeEmptyCategories","shallow","onCardClick","onCategTitleClick","changeTitleID","onCategTitleChange","onCategTitleFinish","components_CategoryItem","removeCardFromParent","cardPosition","cardAction","BoardContainer","values","i","deleteEmptyCategories","target","replace","trim","charCode","Board","Header","onFinishClick","onCommentClick","PopulateHeader","MessageScreen","image","submessage","href","alt","OnBoarding","OnBoardingContainer","Popup","onSumbit","onCancel","textareaRef","useRef","ref","PopupContainer","prevContent","current","App","render","_this$props","showPopup","components_MessageScreen","thanksImage","notFoundImage","cjs","backend","HTML5Backend","containers_PopupContainer","containers_OnBoardingContainer","HeaderContainer","containers_ListContainer","containers_BoardContainer","Component","Boolean","window","location","hostname","match","store","middleware","thunkMiddleware","logger","createStore","applyMiddleware","apply","unsuscribe","subscribe","initialize","URL","searchParams","get","initializeStore","ReactDOM","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7f5bfa6a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thanks-icon.84d1d4ad.svg\";","module.exports = __webpack_public_path__ + \"static/media/not-found.8c3d2a79.svg\";","export default 'PRODUCTION';\n// export default 'DEV';\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_SENDING = 'IS_SENDING';\nexport const DID_INVALIDATE = 'DID_INVALIDATE';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n","export const CREATE_CATEGORY = 'CREATE_CATEGORY';\nexport const REMOVE_CATEGORY = 'REMOVE_CATEGORY';\nexport const RENAME_CATEGORY = 'RENAME_CATEGORY';\nexport const NORMALIZE_CATEGORIES = 'NORMALIZE_CATEGORIES';\n\n/**\n *\n * @param {int} categoryID\n * @param {string} title\n * @param {int} cardID\n * @return {JSON} the action\n */\nexport function createCategory(categoryID, title, cardID) {\n  return {\n    type: CREATE_CATEGORY,\n    payload: {\n      categoryID: categoryID,\n      title: title,\n      cardID: cardID,\n    },\n    error: false,\n  };\n}\n\n/**\n *\n * @param {int} categoryID\n * @return {JSON} the action\n */\nexport function removeCategory(categoryID) {\n  return {\n    type: REMOVE_CATEGORY,\n    payload: {\n      categoryID: categoryID,\n    },\n  };\n}\n\n/**\n *\n * @param {Number} categoryID\n * @param {Title} title\n * @return {JSON}\n */\nexport function renameCategory(categoryID, title) {\n  return {\n    type: RENAME_CATEGORY,\n    payload: {\n      categoryID: categoryID,\n      title: title,\n    },\n    error: false,\n  };\n}\n\n/**\n * Normalizes the categories in a way that is recognizable by the server.\n * This includes actions like changing the non-set by the user values to none.\n * This function should be called before the sending to the server.\n * @return {JSON} the action\n */\nexport function normalizeCategories() {\n  return {\n    type: NORMALIZE_CATEGORIES,\n    payload: {},\n    error: false,\n  };\n}\n","import env from '../enviroment';\n\nlet exportString;\nif (env === 'PRODUCTION') {\n  exportString = 'http://83.212.97.237:8090';\n} else {\n  exportString = 'http://127.0.0.1:5000';\n}\n\nexport default exportString;\n","import * as responseStatus from '../staticContent/responseStatus';\nimport {normalizeCategories} from './categoryAction';\nimport api from './api';\n\nexport const SHOW_DESCRICTION = 'SHOW_DESCRIPTION';\nexport const HIDE_ALL_DESCRIPTIONS = 'HIDE_ALL_DESCRIPTIONS';\nexport const SHOW_TITLE_BOX = 'SHOW_TITLE_BOX';\nexport const HIDE_ALL_BOXES = 'HIDE_ALL_BOXES';\nexport const SAVE_STUDY_ID = 'SAVE_STUDY_ID';\nexport const SENDING_SORT = 'SENDING_SORT';\nexport const SAVE_THANKS_MESSAGE = 'SAVE_THANKS_MESSAGE';\nexport const RENDER_THANKS_MESSAGE = 'RENDER_THANKS_MESSAGE';\nexport const TOOGLE_ON_BOARDING = 'TOOGLE_ON_BOARDING';\nexport const TOGGLE_POPUP = 'TOGGLE_POPUP';\nexport const POPUP_CHANGE_CONTENT = 'POPUP_CHANGE_CONTENT';\nexport const START_SORT = 'START_SORT';\nexport const END_SORT = 'END_SORT';\n\n\n/**\n * Toogle the onboarding screen, that helps the user understand what to do.\n * @param {Boolean} show\n * @return {JSON} the action\n */\nexport function toogleOnBoarding(show) {\n  return {\n    type: TOOGLE_ON_BOARDING,\n    payload: {\n      showOnBoarding: show,\n    },\n    error: false,\n  };\n}\n\n/**\n * Shows the description of a specified card\n * @param {int} cardID the id of the card that the description will be thrown\n * @return {JSON} the action\n */\nexport function showDescription(cardID) {\n  return {\n    type: SHOW_DESCRICTION,\n    payload: {\n      cardID: cardID,\n    },\n    error: false,\n  };\n}\n\n/**\n * Hides the pop up description, it makes sure that none is shown.\n * @return {JSON} the action\n */\nexport function hideAllDescriptions() {\n  return {\n    type: HIDE_ALL_DESCRIPTIONS,\n    error: false,\n  };\n}\n\n/**\n * Shows the textbox of the category, so the user can change the title.\n * @param {Number} categoryID\n * @return {JSON} the action\n */\nexport function showTitleBoxOnCategory(categoryID) {\n  return {\n    type: SHOW_TITLE_BOX,\n    payload: {\n      categoryID: categoryID,\n    },\n    error: false,\n  };\n}\n\n/**\n * Hides all the textboxes.\n * @return {JSON} the action\n */\nexport function hideAllTitleBoxes() {\n  return {\n    type: HIDE_ALL_BOXES,\n    error: false,\n  };\n}\n\n/**\n * Saves the Study id for future reference\n * @param {Number} studyID\n * @return {JSON} the action\n */\nexport function saveStudyID(studyID) {\n  return {\n    type: SAVE_STUDY_ID,\n    payload: {\n      studyID: studyID,\n    },\n    error: false,\n  };\n}\n\n/**\n * Saves the thanks message of the study.\n * @param {String} message\n * @return {JSON} the action\n */\nexport function saveThanksMessage(message) {\n  return {\n    type: SAVE_THANKS_MESSAGE,\n    payload: {\n      message: message,\n    },\n    error: false,\n  };\n}\n\n/**\n * Flags that the thanks message screen must be shown\n * @return {JSON} the action\n */\nexport function renderThanksMessage() {\n  return {\n    type: RENDER_THANKS_MESSAGE,\n    payload: {},\n    error: false,\n  };\n}\n\n/**\n * Toggles a popup with the specified title.\n * @param {Bool} flag\n * @param {String} title\n * @return {JSON} the action\n */\nexport function togglePopup(flag, title) {\n  return {\n    type: TOGGLE_POPUP,\n    payload: {\n      flag: flag,\n      title: title,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the content of the text area.\n * @param {String} content\n * @return {JSON} the action\n */\nexport function popupChangeContent(content) {\n  return {\n    type: POPUP_CHANGE_CONTENT,\n    payload: {\n      content: content,\n    },\n    error: false,\n  };\n}\n\n/**\n * Defines that the sorting has started.\n * @return {JSON} the action\n */\nexport function startSort() {\n  return {\n    type: START_SORT,\n    payload: {},\n    error: false,\n  };\n}\n\n/**\n * Defines that the sorting has ended.\n * @return {JSON} the action\n */\nexport function endSort() {\n  return {\n    type: END_SORT,\n    payload: {},\n    error: false,\n  };\n}\n\n/**\n * Saves the status of the send request\n * @param {ResponseStatus} status\n * @param {JSON} response\n * @param {JSON} error\n * @return {JSON} the action\n */\nexport function sendingSort(status, response, error) {\n  return {\n    type: SENDING_SORT,\n    payload: {\n      status: status,\n    },\n    error: error,\n  };\n}\n\n/* Thunk actions */\n\n/**\n *\n * @param {Number} studyID\n * @param {Number[]} container\n * @param {Category[]} categories\n * @param {Date} timeStarted\n * @param {Date} timeEnded\n * @param {String} comment\n * @return {func}\n */\nexport function sendSort(studyID, container, categories,\n    timeStarted, timeEnded, comment) {\n  return function(dispatch) {\n    const seconds = timeEnded - timeStarted;\n    dispatch(normalizeCategories());\n    dispatch(sendingSort(responseStatus.IS_SENDING));\n    fetch(api+'/sort_endpoint', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        studyID: studyID,\n        categories: categories,\n        container: container,\n        time: seconds,\n        comment: comment,\n      }),\n    }).then(\n        (response) => response.json().then((json) => {\n          dispatch(sendingSort(responseStatus.SUCCESS));\n          dispatch(saveThanksMessage(json.message));\n          dispatch(renderThanksMessage());\n        })\n    );\n  };\n}\n","import fetch from 'cross-fetch';\nimport * as responseStatus from '../staticContent/responseStatus';\nimport {saveStudyID, toogleOnBoarding} from './uiAction';\nimport debugConsole from '../debug/Debugconsole';\nimport api from './api';\n\nexport const IMPORT_CARD = 'IMPORT_CARD';\nexport const ADD_CARD_CATEGORY = 'ADD_CARD_CATEGORY';\nexport const REMOVE_CARD_CATEGORY = 'REMOVE_CARD_CATEGORY';\nexport const ADD_CARD_CONTAINER = 'ADD_CARD_CONTAINER';\nexport const REMOVE_CARD_CONTAINER = 'REMOVE_CARD_CONTAINER';\n\nexport const REQUEST_CARDS = 'REQUEST_CARDS';\n\n// Action creators //\n\n/**\n *\n * @param {int} cardID\n * @param {int} categoryID\n * @return {JSON} the action\n */\nexport function addCardToCategory(cardID, categoryID) {\n  return {\n    type: ADD_CARD_CATEGORY,\n    payload: {\n      cardID: cardID,\n      categoryID: categoryID,\n    },\n    error: false,\n  };\n}\n\n/**\n *\n * @param {int} cardID\n * @param {int} categoryID\n * @return {JSON} the action\n */\nexport function removeCardFromCategory(cardID, categoryID) {\n  return {\n    type: REMOVE_CARD_CATEGORY,\n    payload: {\n      cardID: cardID,\n      categoryID: categoryID,\n    },\n    error: false,\n  };\n}\n\n/**\n *\n * @param {int} cardID\n * @return {JSON} the action\n */\nexport function addCardToContainer(cardID) {\n  return {\n    type: ADD_CARD_CONTAINER,\n    payload: {\n      cardID: cardID,\n    },\n    error: false,\n  };\n}\n\n/**\n *\n * @param {int} cardID\n * @return {JSON} the action\n */\nexport function removeCardFromContainer(cardID) {\n  return {\n    type: REMOVE_CARD_CONTAINER,\n    payload: {\n      cardID: cardID,\n    },\n    error: false,\n  };\n}\n\n/**\n *\n * @param {responseStatus} status\n * @param {JSON} response\n * @param {String} error\n * @return {JSON} the action\n */\nexport function requestCards(status, response, error) {\n  return {\n    type: REQUEST_CARDS,\n    payload: {\n      status: status,\n      response: response,\n      error: error,\n    },\n  };\n}\n\n/* Thunk actions */\n\n/**\n *\n * @param {Number} studyID\n * @return {function}\n */\nexport function fetchCards(studyID) {\n  return function(dispatch) {\n    dispatch(saveStudyID(studyID));\n    dispatch(requestCards(responseStatus.IS_FETCHING));\n\n    fetch(api+'/sort_endpoint?cards=true&study_id='+studyID)\n        .then(\n            (response) => response.json().then((json) =>{\n              if (response.status === 404) {\n                dispatch(requestCards(responseStatus.SUCCESS,\n                    undefined, json.error));\n                return;\n              }\n              // Load the cards\n              dispatch(requestCards(responseStatus.SUCCESS, json));\n              // Show the cards\n              for (const card of json.cards) {\n                dispatch(addCardToContainer(card.id));\n              }\n              // Show the onboarding screen\n              dispatch(toogleOnBoarding(true));\n            }),\n            (error) => debugConsole(error)\n        );\n  };\n}\n\n","/**\n * Used to print messages and other debug data to the console.\n * @param {*} params\n */\nexport default function debugConsole(...args) {\n  console.log(args);\n}\n","/**\n * Represents the data model of the category\n */\nexport default class Category {\n  /**\n   *\n   * @param {int} id\n   * @param {String} title\n   */\n  constructor(id, title) {\n    this.id = id;\n    this.title = title;\n    this.cards = [];\n  }\n\n  /**\n   *\n   * @param {int} cardId\n   */\n  addCard(cardId) {\n    this.cards.push(cardId);\n  }\n\n  /**\n   *\n   * @param {int} cardId\n   */\n  removeCard(cardId) {\n    this.cards = this.cards.filter((id)=> {\n      return id !== cardId;\n    });\n  }\n}\n","export default {\n  addComment: 'add a comment',\n  cancel: 'cancel',\n  clickToRename: 'click here to rename',\n  dropToAdd: 'drop to add',\n  dropToCreateCategory: 'drop to create a category',\n  studyNotFound: 'study not found',\n  sumbit: 'sumbit',\n  youCanCloseThisTab: 'you can close this tab',\n};\n","import enUS from './en-us';\n\n/**\n * Holds the proper localized text for usage in the UI.\n */\nclass LocalizedText {\n  /**\n   *\n   * @param {String} locale supported locales:\n   * - 'en-us' : English - United States\n   */\n  initialize(locale) {\n    switch (locale) {\n      default: {\n        this.text = enUS;\n      }\n    }\n  }\n};\n\nexport default new LocalizedText();\n","/**\n * Data model representing the card\n */\nexport default class Card {\n  /**\n   *\n   * @param {int} id\n   * @param {string} title\n   * @param {string} description\n   */\n  constructor(id, title, description) {\n    this.id = id;\n    this.title = title;\n    this.description = description;\n  }\n}\n","/**\n * Static holder for the cards\n */\nexport default {};\n","import {combineReducers} from 'redux';\nimport containerReducer from './containerReducer';\nimport categoriesReducer from './categoriesReducer';\nimport uiReducer from './uiReducer';\nimport cardReducer from './cardReducer';\n\nconst app = combineReducers({\n  cards: cardReducer,\n  categories: categoriesReducer,\n  container: containerReducer,\n  ui: uiReducer,\n});\n\nexport default app;\n","import * as cardActions from '../actions/cardAction';\nimport Card from '../elements/Card';\nimport cards from '../staticContent/cards';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function card(state={}, action) {\n  switch (action.type) {\n    case cardActions.REQUEST_CARDS: {\n      const response = action.payload.response;\n      if (response) {\n        for (const card of response.cards) {\n          cards[card.id] =\n              new Card(card.id, card.name, card.description);\n        }\n      }\n      return Object.assign({}, state, {\n        'status': action.payload.status,\n        'notFound': action.payload.error ? true : false,\n      });\n    }\n    default:\n      return state;\n  }\n}\n","import * as cardActions from '../actions/cardAction';\nimport * as categoryAction from '../actions/categoryAction';\nimport Category from '../elements/Category';\n\nimport L from '../localization/LocalizedText';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function categories(state={}, action) {\n  switch (action.type) {\n    case categoryAction.CREATE_CATEGORY: {\n      const id = action.payload.categoryID || Date.now();\n      const category = new Category(id, action.payload.title);\n      category.addCard(action.payload.cardID);\n\n      const newState = Object.assign({}, state);\n      newState[id] = category;\n      return newState;\n    }\n    case categoryAction.REMOVE_CATEGORY: {\n      const categoryID = action.payload.categoryID;\n      const newState = Object.assign({}, state);\n\n      delete newState[categoryID];\n      return newState;\n    }\n    case categoryAction.RENAME_CATEGORY: {\n      const id = action.payload.categoryID;\n      const newState = Object.assign({}, state);\n\n      newState[id].title = action.payload.title;\n      return newState;\n    }\n    case cardActions.ADD_CARD_CATEGORY: {\n      const cardID = action.payload.cardID;\n      const categoryID = action.payload.categoryID;\n      const newState = Object.assign({}, state);\n\n      newState[categoryID].addCard(cardID);\n      return newState;\n    }\n    case cardActions.REMOVE_CARD_CATEGORY: {\n      const cardID = action.payload.cardID;\n      const categoryID = action.payload.categoryID;\n      const newState = Object.assign({}, state);\n\n      newState[categoryID].removeCard(cardID);\n      return newState;\n    }\n    case categoryAction.NORMALIZE_CATEGORIES: {\n      const newState = Object.assign({}, state);\n      for (const categoryID in newState) {\n        if ({}.hasOwnProperty.call(newState, categoryID)) {\n          const category = newState[categoryID];\n          if (category.title === L.text.clickToRename) {\n            category.title = 'not set';\n          }\n        }\n      }\n      return newState;\n    }\n    default:\n      return state;\n  }\n}\n","import * as cardActions from '../actions/cardAction';\n\n/**\n *\n * @param {boardState} state\n * @param {ReduxAction} action\n * @return {boardState}\n */\nexport default function container(state={}, action) {\n  switch (action.type) {\n    case cardActions.ADD_CARD_CONTAINER: {\n      return [\n        ...state,\n        action.payload.cardID,\n      ];\n    }\n    case cardActions.REMOVE_CARD_CONTAINER: {\n      return [...state].filter((x) => x !== action.payload.cardID);\n    }\n    default:\n      return state;\n  }\n}\n","import * as uiAction from '../actions/uiAction';\n\n/**\n *\n * @param {BoardState} state\n * @param {UIAction} action\n * @return {BoardState}\n */\nexport default function ui(state={}, action) {\n  switch (action.type) {\n    case uiAction.TOOGLE_ON_BOARDING: {\n      return Object.assign({}, state, {\n        'showOnBoarding': action.payload.showOnBoarding,\n      });\n    }\n    case uiAction.SHOW_DESCRICTION: {\n      return Object.assign({}, state, {\n        'showingDescription': action.payload.cardID,\n      });\n    }\n    case uiAction.HIDE_ALL_DESCRIPTIONS: {\n      return Object.assign({}, state, {\n        'showingDescription': undefined,\n      });\n    }\n    case uiAction.SHOW_TITLE_BOX: {\n      return Object.assign({}, state, {\n        'changeTitle': action.payload.categoryID,\n      });\n    }\n    case uiAction.HIDE_ALL_BOXES: {\n      return Object.assign({}, state, {\n        'changeTitle': undefined,\n      });\n    }\n    case uiAction.SAVE_STUDY_ID: {\n      return Object.assign({}, state, {\n        'studyID': action.payload.studyID,\n      });\n    }\n    case uiAction.SENDING_SORT: {\n      return Object.assign({}, state, {\n        'sendingSort': action.payload.status,\n      });\n    }\n    case uiAction.SAVE_THANKS_MESSAGE: {\n      return Object.assign({}, state, {\n        'thanksMessage': action.payload.message,\n      });\n    }\n    case uiAction.RENDER_THANKS_MESSAGE: {\n      return Object.assign({}, state, {\n        'renderThanks': true,\n      });\n    }\n    case uiAction.TOGGLE_POPUP: {\n      const newState = Object.assign({}, state);\n      newState.popup.show = action.payload.flag;\n      newState.popup.title = action.payload.title;\n\n      return newState;\n    }\n    case uiAction.POPUP_CHANGE_CONTENT: {\n      const newState = Object.assign({}, state);\n      newState.popup.content = action.payload.content;\n\n      return newState;\n    }\n    case uiAction.START_SORT: {\n      return Object.assign({}, state, {\n        'timeStarted': Date.now(),\n      });\n    }\n    case uiAction.END_SORT: {\n      return Object.assign({}, state, {\n        'timeEnded': Date.now(),\n      });\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","const initialState = {\n  cards: {\n    notFound: undefined,\n    status: undefined,\n  },\n  container: [],\n  categories: {\n    /* CategoryId: Category */\n  },\n  ui: {\n    showOnBoarding: undefined,\n    changeTitle: undefined,\n    showingDescription: undefined,\n    studyID: undefined,\n    sendingSort: undefined,\n    renderThanks: undefined,\n    thanksMessage: undefined,\n    cardsSorted: undefined,\n    categoriesCreated: undefined,\n    timeStarted: undefined,\n    timeEnded: undefined,\n    popup: {\n      show: false,\n      title: 'Add a comment',\n      content: undefined,\n    },\n  },\n};\n\nexport default initialState;\n","export const itemTypes = {\n  CARD: 'card-drag',\n};\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {DragSource} from 'react-dnd';\n\nimport {itemTypes} from '../../staticContent/dragConstants';\n\n\nconst cardSource = {\n  beginDrag(props) {\n    return {id: props.id, position: props.position};\n  },\n};\n\n/**\n *\n * @param {*} connect\n * @param {*} monitor\n * @return {*}\n */\nfunction collect(connect, monitor) {\n  return {\n    connectDragSource: connect.dragSource(),\n    isDragging: monitor.isDragging(),\n  };\n}\n\n\nconst CardItem = ({id, title, description, minimized, position,\n  onClick, showDescription, connectDragSource, isDragging}) => {\n  const classString = (!minimized || showDescription) ?\n    'card' : 'card minimized';\n  return connectDragSource(\n      <li className={classString}>\n        <h4>{title}</h4>\n        {\n          /* Show the description */\n          (!minimized || showDescription) && <p>{description}</p>\n        }\n        {\n          /* Show the description button */\n          (minimized && description && !showDescription) &&\n            <div className=\"desc-container\">\n              <button onClick={onClick} className=\"desc-btn\">\n                <p>?</p>\n              </button>\n            </div>\n        }\n        {\n          /* The \"drag to add\" action */\n        }\n      </li>);\n};\n\nCardItem.propTypes = {\n  id: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  description: PropTypes.string,\n  minimized: PropTypes.bool,\n  position: PropTypes.number.isRequired,\n  onClick: PropTypes.func,\n  showDescription: PropTypes.bool,\n};\n\n\n// eslint-disable-next-line new-cap\nexport default DragSource(itemTypes.CARD, cardSource, collect)(CardItem);\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport CardItem from './CardItem.jsx';\n\nconst List = ({cards}) => (\n  <ul id='list'>\n    {\n      cards.map((card) => (\n        <CardItem key={card.id} id={card.id} title={card.title}\n          description={card.description} position={-1} />\n      ))\n    }\n  </ul>\n);\n\nList.propTypes = {\n  cards: PropTypes.array.isRequired,\n};\n\nexport default List;\n","import cards from '../staticContent/cards';\n\n/**\n * Parses the card's id and returns the real objects\n * @param {cardID[]} cardIDs\n * @return {card[]} the corresponding objects\n */\nexport default function parseCards(cardIDs) {\n  // Add the card item based on it's id\n  const cardsArr = [];\n  for (const cardID of cardIDs) {\n    cardsArr.push(cards[cardID]);\n  }\n  return {\n    cards: cardsArr,\n  };\n}\n","import {connect} from 'react-redux';\nimport List from '../components/List.jsx';\nimport parseCards from '../../helpers/cardParser';\n\n\nconst mapStateToProps = (state) => {\n  return parseCards(state.container);\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst ListContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(List);\n\nexport default ListContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {DropTarget} from 'react-dnd';\n\nimport {itemTypes} from '../../staticContent/dragConstants';\n// eslint-disable-next-line no-unused-vars\nimport CardItem from './CardItem.jsx';\nimport parseCards from '../../helpers/cardParser';\nimport L from '../../localization/LocalizedText';\n\nimport plusImage from '../../icons/plus.svg';\n\nconst categoryTarget = {\n  drop(props, monitor) {\n    const card = monitor.getItem();\n    props.onCardDrop(card.id, card.position, props.id);\n  },\n};\n\n/**\n *\n * @param {*} connect\n * @param {*} monitor\n * @return {*}\n */\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver(),\n  };\n}\n\nconst CategoryItem = ({id, title, cards, onClick, showTitleBox,\n  onCardDrop, onTitleClick, onTitleChange, onTitleFinish,\n  descriptionID, connectDropTarget, isOver}) => {\n  cards = parseCards(cards).cards;\n  return connectDropTarget(\n      <li className={(isOver) ? 'category max-height' : 'category'}>\n        {\n          showTitleBox &&\n          <div className=\"title-input\">\n            <input type='text' defaultValue={title}\n              onChange={(e)=>onTitleChange(e, id)}\n              onKeyPress={(e)=>onTitleFinish(e)}\n              onClick={(e)=>e.stopPropagation()}></input>\n            <button type=\"button\" onClick={()=>onTitleFinish()}></button>\n          </div>\n        }\n        {\n          !showTitleBox &&\n          <h3 onClick={(e)=>onTitleClick(e, id)}>{title}</h3>\n        }\n        {\n          /* Show the 'drop to add to category' */\n          isOver &&\n          <div className=\"drop-to-add\">\n            <img src={plusImage}></img>\n            <p>{L.text.dropToAdd}</p>\n          </div>\n        }\n        <ul>{\n          cards.map((card) => (\n            <CardItem key={card.id} id={card.id} title={card.title}\n              description={card.description} minimized={true}\n              position={id}\n              onClick={(event) => onClick(event, card.id, card.description)}\n              showDescription={card.id===descriptionID}/>\n          ))\n        }</ul>\n      </li>\n  );\n};\n\nCategoryItem.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// eslint-disable-next-line new-cap\nexport default DropTarget(itemTypes.CARD,\n    categoryTarget, collect)(CategoryItem);\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport {DropTarget} from 'react-dnd';\n\nimport {itemTypes} from '../../staticContent/dragConstants';\n// eslint-disable-next-line no-unused-vars\nimport CategoryItem from './CategoryItem';\nimport L from '../../localization/LocalizedText';\nimport plusImage from '../../icons/plus.svg';\n\nconst boardTarget = {\n  drop(props, monitor) {\n    if (!monitor.didDrop()) {\n      const card = monitor.getItem();\n      // Handle the drop only if a category did not handle it first\n      props.onDrop(card.id, card.position);\n    }\n    props.removeEmptyCategories(props.categories);\n  },\n};\n\n/**\n *\n * @param {*} connect\n * @param {*} monitor\n * @return {*}\n */\nfunction collect(connect, monitor) {\n  return {\n    connectDropTarget: connect.dropTarget(),\n    isOver: monitor.isOver({shallow: true}),\n  };\n}\n\nconst Board = ({categories, onClick, onCardClick, onCategTitleClick,\n  changeTitleID, onCardDrop, onDrop, descriptionID, onCategTitleChange,\n  onCategTitleFinish, removeEmptyCategories, connectDropTarget, isOver}) => {\n  categories = categories.map((category) => (\n    <CategoryItem key={'k' + category.id} id={category.id}\n      title={category.title} cards={category.cards} onClick={onCardClick}\n      onTitleChange={onCategTitleChange}\n      onTitleClick={onCategTitleClick} onCardDrop={onCardDrop}\n      onTitleFinish={onCategTitleFinish}\n      showTitleBox={category.id === changeTitleID}\n      descriptionID={descriptionID}/>\n  ));\n\n  return connectDropTarget(<ul id='board' onClick={onClick}>\n    {\n      categories\n    }\n    {\n      /* Show the 'create new category' */\n      isOver &&\n      <div className=\"category drop-to-create\">\n        <img src={plusImage}></img>\n        <p>{L.text.dropToCreateCategory}</p>\n      </div>\n    }\n  </ul>);\n};\n\n\nBoard.propTypes = {\n  categories: PropTypes.array.isRequired,\n};\n\n\n// eslint-disable-next-line new-cap\nexport default DropTarget(itemTypes.CARD,\n    boardTarget, collect)(Board);\n","import {connect} from 'react-redux';\n\nimport Board from '../components/Board.jsx';\nimport * as uiAction from '../../actions/uiAction';\nimport * as cardAction from '../../actions/cardAction';\nimport * as categoryAction from '../../actions/categoryAction';\n\nimport L from '../../localization/LocalizedText';\n\n/**\n * Removes the card with the given id from it's current parent\n * @param {function} dispatch\n * @param {Number} cardPosition\n * @param {Number} cardID\n */\nfunction removeCardFromParent(dispatch, cardPosition, cardID) {\n  if (cardPosition === -1) {\n    // The card is in the main container\n    dispatch(cardAction.removeCardFromContainer(cardID));\n  } else\n  if (cardPosition > -1) {\n    // The card belongs to a category and it is being moved to a\n    // new one\n    dispatch(cardAction.removeCardFromCategory(cardID, cardPosition));\n  }\n}\n\n/**\n * Looks for an empty category and removes it from the state\n * @param {function} dispatch\n * @param {Category[]} categories\n */\nfunction deleteEmptyCategories(dispatch, categories) {\n  for (const i in categories) {\n    if (categories[i].cards.length < 1) {\n      // Only one category can be empty on each state update\n      dispatch(categoryAction.removeCategory(categories[i].id));\n      break;\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  // Convert to array\n  const categories = Object.values(state.categories);\n  const showingDescription = state.ui['showingDescription'];\n  const changeTitle = state.ui['changeTitle'];\n\n  return {categories: categories, descriptionID: showingDescription,\n    changeTitleID: changeTitle};\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: () => {\n      // Hide the descriptions and category renaming on user click\n      dispatch(uiAction.hideAllDescriptions());\n      dispatch(uiAction.hideAllTitleBoxes());\n    },\n    onDrop: (cardID, cardPosition) => {\n      // This is *only* executed only if the OnCardDrop didn't\n      // Create the new category, containing the dropped card\n      removeCardFromParent(dispatch, cardPosition, cardID);\n      dispatch(categoryAction.createCategory(undefined,\n          L.text.clickToRename, cardID));\n    },\n    removeEmptyCategories: (categories) => {\n      // This is triggered on every drop on the Board\n      deleteEmptyCategories(dispatch, categories);\n    },\n    onCategTitleClick: (event, categoryID) => {\n      event.stopPropagation();\n      dispatch(uiAction.showTitleBoxOnCategory(categoryID));\n    },\n    onCategTitleChange: (event, categoryID) => {\n      let title = event.target.value;\n      title = title.replace(/\\s\\s+/g, ' ').trim();\n      title = (title.length > 0) ? title : L.text.clickToRename;\n      dispatch(categoryAction.renameCategory(categoryID, title));\n    },\n    onCategTitleFinish: (event) => {\n      if (!event) {\n        dispatch(uiAction.hideAllTitleBoxes());\n        return;\n      }\n      event.stopPropagation();\n      if (event.charCode === 13) {\n        dispatch(uiAction.hideAllTitleBoxes());\n      }\n    },\n    onCardClick: (event, cardID, description) => {\n      event.stopPropagation();\n      if (description && description.length > 0) {\n        dispatch(uiAction.showDescription(cardID));\n      }\n    },\n    onCardDrop: (cardID, cardPosition, categoryID) => {\n      removeCardFromParent(dispatch, cardPosition, cardID);\n      dispatch(cardAction.addCardToCategory(cardID, categoryID));\n    },\n  };\n};\n\nconst BoardContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Board);\n\nexport default BoardContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({studyID, container, categories,\n  timeStarted, onFinishClick, onCommentClick, comment}) => (\n  <header>\n    <h1 id=\"logo\">Card Sorter</h1>\n    <button className=\"btn--secondary\" onClick={onCommentClick}>\n      <p>Add a comment</p>\n    </button>\n    <button className=\"btn--main\" onClick={() =>\n      onFinishClick(studyID, container, categories,\n          timeStarted, comment)}><p>Finish</p></button>\n  </header>\n);\n\nHeader.propTypes = {\n  studyID: PropTypes.string,\n  container: PropTypes.array,\n  categories: PropTypes.object,\n  onFinishClick: PropTypes.func.isRequired,\n  comment: PropTypes.string,\n};\n\nexport default Header;\n","import {connect} from 'react-redux';\n\nimport Header from '../components/Header.jsx';\nimport {sendSort, endSort, togglePopup} from '../../actions/uiAction';\nimport L from '../../localization/LocalizedText';\n\n\nconst mapStateToProps = (state) => {\n  // The state is updated so the component knows what to send on finish\n  // TODO: This may not be a very good solution\n  return {\n    studyID: state.ui.studyID,\n    timeStarted: state.ui.timeStarted,\n    container: state.container,\n    categories: state.categories,\n    comment: state.ui.popup.content,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFinishClick: (studyID, container, categories,\n        timeStarted, comment) => {\n      dispatch(endSort());\n      dispatch(sendSort(studyID, container, categories,\n          timeStarted, Date.now(), comment));\n    },\n    onCommentClick: () => {\n      dispatch(togglePopup(true, L.text.addComment));\n    },\n  };\n};\n\nconst PopulateHeader = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Header);\n\nexport default PopulateHeader;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst MessageScreen = ({message, image, submessage}) => (\n  <div className=\"message-screen\">\n    <h1 id=\"logo\"><a href=\"/\">Card Sorter</a></h1>\n    <img src={image} alt='Sending love!'></img>\n    <h2>{message}</h2>\n    <h3>{submessage}</h3>\n  </div>\n);\n\nMessageScreen.propTypes = {\n  message: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  submessage: PropTypes.string,\n};\n\nexport default MessageScreen;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\n\nconst OnBoarding = ({show, onClick}) => {\n  if (show) {\n    return (\n      <div className=\"on-boarding-screen\" onClick={(e) => onClick(e)}>\n        <div className=\"list-explainer\">\n          <span>\n            <h3>Step 1</h3>\n            <p>Take a quick look at the list of items to the left.</p>\n            <p>We'd like you to sort them into groups\n              that make sense to you.</p>\n            <p>There is no right or wrong answer. Just do what comes naturally.</p>\n            <h3>Step 2</h3>\n            <p>Drag an item from the left into this area to create your first group.</p>\n          </span>\n        </div>\n        <div className=\"finish-explainer\">\n          <span>\n            <h3>Step 3</h3>\n            <p>When you feel like you are done, press the finish button.</p>\n          </span>\n        </div>\n      </div>\n    );\n  }\n  return <span></span>;\n};\n\nOnBoarding.propTypes = {\n  show: PropTypes.bool,\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default OnBoarding;\n","import {connect} from 'react-redux';\n\nimport OnBoarding from '../components/OnBoarding';\nimport {toogleOnBoarding, startSort} from '../../actions/uiAction';\n\nconst mapStateToProps = (state) => {\n  return {\n    show: state.ui.showOnBoarding,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onClick: (e) => {\n      e.stopPropagation();\n      dispatch(toogleOnBoarding(false));\n      dispatch(startSort());\n    },\n  };\n};\n\nconst OnBoardingContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(OnBoarding);\n\nexport default OnBoardingContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../localization/LocalizedText';\n\nconst Popup = ({title, content, onSumbit, onCancel}) => {\n  const textareaRef = useRef(null);\n  return (\n    <div className=\"popup-container\">\n      <div className=\"popup\">\n        <h1>{title}</h1>\n        <form>\n          <textarea defaultValue={content} ref={textareaRef}>\n          </textarea>\n          <div className=\"btn-container\">\n            <button type=\"button\" className=\"btn--secondary cancel\"\n              onClick={() => onCancel(content)}>\n              <p>{L.text.cancel}</p>\n            </button>\n            <button type=\"button\" className=\"btn--main sumbit\"\n              onClick={() => onSumbit(textareaRef)}>\n              <p>{L.text.sumbit}</p>\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>);\n};\n\nPopup.propTypes = {\n  title: PropTypes.string.isRequired,\n  defaultValue: PropTypes.string,\n  onSumbit: PropTypes.func.isRequired,\n  onCancel: PropTypes.func.isRequired,\n};\n\nexport default Popup;\n","import {connect} from 'react-redux';\n\nimport Popup from '../components/Popup.jsx';\nimport * as uiAction from '../../actions/uiAction';\n\nconst mapStateToProps = (state) => {\n  return ({\n    title: state.ui.popup.title,\n    content: state.ui.popup.content,\n    prevContent: state.ui.popup.prevContent,\n  });\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return ({\n    onSumbit: (ref) => {\n      const content = ref.current.value;\n      dispatch(uiAction.popupChangeContent(content));\n      dispatch(uiAction.togglePopup(false));\n    },\n    onCancel: (prevContent) => {\n      // Reset the comment\n      dispatch(uiAction.popupChangeContent(prevContent));\n      dispatch(uiAction.togglePopup(false));\n    },\n  });\n};\n\nconst PopupContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Popup);\n\nexport default PopupContainer;\n","import 'babel-polyfill'; // Ensure all polyfills are present\n\n// eslint-disable-next-line no-unused-vars\nimport React, {Component} from 'react';\nimport {connect} from 'react-redux';\n// eslint-disable-next-line no-unused-vars\nimport {DragDropContextProvider} from 'react-dnd';\nimport HTML5Backend from 'react-dnd-html5-backend';\n\n// eslint-disable-next-line no-unused-vars\nimport ListContainer from './elements/containers/ListContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport BoardContainer from './elements/containers/BoardContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport HeaderContainer from './elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport MessageScreen from './elements/components/MessageScreen.jsx';\n// eslint-disable-next-line no-unused-vars\nimport OnBoardingContainer from './elements/containers/OnBoardingContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Popup from './elements/containers/PopupContainer.jsx';\n\nimport thanksImage from './icons/thanks-icon.svg';\nimport notFoundImage from './icons/not-found.svg';\n\nimport L from './localization/LocalizedText';\nimport './App.css';\n\n/**\n * App route\n */\nclass App extends Component {\n  /**\n   * React render\n   * @return {Component}\n   */\n  render() {\n    const {studyNotFound, renderThanks, thanksMessage,\n      showPopup} = this.props;\n\n    let render;\n    if (renderThanks) {\n      render = (\n        <main>\n          <MessageScreen message={thanksMessage} image={thanksImage}\n            submessage={'('+L.text.youCanCloseThisTab+')'}/>\n        </main>);\n    } else\n    if (studyNotFound) {\n      render = (\n        <main>\n          <MessageScreen message={L.text.studyNotFound} image={notFoundImage}/>\n        </main>);\n    } else {\n      render = (\n        <DragDropContextProvider backend={HTML5Backend}>\n          {\n            showPopup &&\n            <Popup/>\n          }\n          <OnBoardingContainer/>\n          <div className=\"App\">\n            <HeaderContainer />\n            <div id=\"main-panel\">\n              <ListContainer/>\n              <BoardContainer/>\n            </div>\n          </div>\n        </DragDropContextProvider>);\n    }\n\n    return render;\n  }\n}\n\nexport default connect(\n    (state) => {\n      return {\n        studyNotFound: state.cards.notFound,\n        renderThanks: state.ui.renderThanks,\n        thanksMessage: state.ui.thanksMessage,\n        showPopup: state.ui.popup.show,\n      };\n    }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line no-unused-vars\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport initializeStore from './Store';\n// eslint-disable-next-line no-unused-vars\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = initializeStore();\nReactDOM.render(<Provider store={store}><App /></Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport env from './enviroment';\n\nimport app from './reducers/indexReducer';\nimport initialState from './reducers/boardState';\nimport {fetchCards} from './actions/cardAction';\nimport L from './localization/LocalizedText';\n\n/**\n * @return {Store}\n */\nexport default function initializeStore() {\n  const middleware = [thunkMiddleware];\n  if (env !== 'PRODUCTION') {\n    middleware.push(logger);\n  }\n\n  const store = createStore(app, initialState, applyMiddleware(\n      ...middleware\n  ));\n\n  const unsuscribe = store.subscribe(() => {});\n  // () => debugConsole(store.getState())\n  // runTest(store);\n\n  // Initialize locale\n  L.initialize('en-us');\n\n  // Get the id param\n  const url = new URL(window.location.href);\n  const id = url.searchParams.get('id');\n  // Load the cards\n  store.dispatch(fetchCards(id));\n\n  // debugConsole(store.getState());\n\n  unsuscribe();\n  return store;\n}\n","module.exports = __webpack_public_path__ + \"static/media/plus.ed718a5f.svg\";"],"sourceRoot":""}