{"version":3,"sources":["demo/profile.jpeg","icons/sample-user.svg","icons/plus.svg","icons/success.svg","icons/empty.svg","elements/components/Header.jsx","elements/containers/HeaderContainer.jsx","localization/en-us.js","localization/LocalizedText.js","elements/components/StudyItem.jsx","elements/components/CreateStudyItem.jsx","elements/components/StudiesContainer.jsx","elements/containers/PopulateStudiesContainer.jsx","elements/components/Filters.jsx","pages/Main.jsx","elements/components/studyCreationPages/Page1.jsx","elements/components/studyCreationPages/Card.jsx","elements/components/studyCreationPages/Page2.jsx","elements/components/studyCreationPages/Page3.jsx","elements/components/studyCreationPages/SuccessPage.jsx","elements/components/StudyCreation.jsx","static/StatusEnum.js","auth/authenticator.js","debug/debugConsole.js","actions/api.js","actions/studyAction.js","actions/studyCreationAction.js","elements/containers/StudyCreationContainer.jsx","pages/CreateStudy.jsx","pages/CreateStudyContainer.jsx","elements/components/studyPageElements/StudyMenu.jsx","elements/components/studyPageElements/DataTable.jsx","elements/components/studyPageElements/BarGraph.jsx","elements/components/studyPageElements/NoParticipants.jsx","elements/components/Study.jsx","actions/studyPageAction.js","elements/containers/StudyContainer.jsx","pages/StudyPage.jsx","actions/headerAction.js","elements/StudyCard.js","reducers/indexReducer.js","reducers/headerReducer.js","reducers/studyReducer.js","reducers/studyCreationReducer.js","reducers/studyPageReducer.js","reducers/stateSchema.js","serviceWorker.js","index.js","Store.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","username","profilePic","react_default","a","createElement","href","id","className","src","demoImage","alt","HeaderContainer","connect","state","header","dispatch","en_us","abandonded","active","addCard","averageSort","basicInformation","card","cardName","cards","cardsNo","cardsSorted","categories","categoriesCreated","categoriesNo","category","clusters","completed","completedTheStudy","completion","couldBeMergedInto","create","createStudy","description","editedOn","endedOn","filter","frequency","inactive","launchedOn","message","noParticipantsYet","of","ongoing","outOf","participant","participantNo","participants","similarity","similarityMatrix","studies","studyCreated","thanksMessage","timeTaken","title","users","wereSorterInAverage","localization_LocalizedText","locale","this","text","enUS","StudyItem","isLive","completedNo","abandonedNo","launchedDate","editDate","endDate","onClick","localizedText","dateTime","getDate","getMonth","getFullYear","CreateStudyItem","plusSign","StudiesContainer","onStudyClick","onCreateClick","map","Study","index","components_StudyItem","key","components_CreateStudyItem","PopulateStudiesContainer","ownProps","history","push","Filters","ongoingRef","completedRef","ongoingStyle","completedStyle","Main","containers_HeaderContainer","components_Filters","containers_PopulateStudiesContainer","Page1","values","type","placeholder","onChange","e","rows","cols","onPrev","onNext","Card","name","onNameChange","onDescriptionChange","Page2","studyCreationPages_Card","onCardNameChange","onCardDescriptionChange","onCreateCard","Page3","onMessageChange","study","SuccessPage","urlRef","useRef","L","successImage","onButtonClick","url","ref","defaultValue","onCopy","StudyCreationContainer","render","currentPage","page1Values","page1Dispatch","page2Values","page2Dispatch","page3Values","page3Dispatch","page4Values","page4Dispatch","studyCreationPages_Page1","studyCreationPages_Page2","studyCreationPages_Page3","studyCreationPages_SuccessPage","react_router","to","IS_FETCHING","SUCCESS","Authenticator","getCookie","prototype","cname","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","authenticator","debugConsole","_len","arguments","args","Array","_key","console","log","api","LOAD_STUDIES","ADD_STUDY","loadStudies","status","response","error","payload","CHANGE_TITLE","CHANGE_DESCRIPTION","ADD_CARD","CHANGE_CARD_NAME","CHANGE_CARD_DESCRIPTION","CHANGE_THANKS_MESSAGE","CREATE_STUDY","SHOW_PAGE","OPEN_STUDY_PAGE","CHECK_TITLE","showPage","pageNo","sendStudy","StatusEnum","fetch","method","withCredentials","credentials","headers","Content-Type","Authorization","auth","getToken","Access-Control-Allow-Credentials","body","JSON","stringify","then","json","setTimeout","window","location","reload","replace","onElementChange","event","value","target","err","constructState","studyCreation","ui","titleValidity","validTitle","Object","studyCreationAction","Date","now","current","select","execCommand","StudyCreation","CreateStudy","containers_StudyCreationContainer","CreateStudyContainer","StudyMenu","selectedNo","onClicks","styles","propsTypes","PropTypes","number","isRequired","object","DataTable","data","line","item","child","BarGraph","percentage","sub","total","entity","action","style","height","bottom","NoParticipants","noParticipantsImage","props","loadStudy","_this$props","isFetching","launched","menuValues","menuDispatch","graphValues","tableValues","noParticipants","tableDispatch","undefined","studyPageElements_NoParticipants","studyPageElements_StudyMenu","studyPageElements_BarGraph","studyPageElements_DataTable","Component","CHANGE_VIEW","LOAD_STUDY","changeView","viewNo","no","getHeaders","selectedItem","getGraphValues","average","sorted","similar","getData","StudyContainer","studyAction","StudyPage","match","containers_StudyContainer","params","REQUEST_USERNAME","requestingUsername","StudyCard","classCallCheck","app","combineReducers","headerActions","assign","studyActions","newState","studyCreationActions","titleFetching","studySending","ended","merged","initialState","didInvalidate","1","Boolean","hostname","store","createStore","applyMiddleware","thunkMiddleware","initialize","unsuscribe","subscribe","initializeStore","ReactDOM","es","react_router_dom","exact","path","component","concat","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f059e62.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ed50a564.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sample-user.efe01b90.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.648c7e93.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.a0af0ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.cfb49f55.svg\";","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport demoImage from '../../icons/sample-user.svg';\n\nconst Header = ({username, profilePic}) => {\n  return (<header>\n    <a href=\"/\" id=\"logo\">Card Sorter</a>\n    <div className=\"profile\">\n      <p>{username}</p>\n      <img src={demoImage} alt='Profile' />\n    </div>\n  </header>);\n};\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired,\n  profilePic: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import {connect} from 'react-redux';\n\nimport Header from '../components/Header.jsx';\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.header.username,\n    profilePic: state.header.profilePic,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Header);\n\nexport default HeaderContainer;\n","export default {\n  abandonded: 'Abandoned',\n  active: 'Active',\n  addCard: 'Add Card',\n  averageSort: 'average sort',\n  basicInformation: 'Basic Information',\n  card: 'card',\n  cardName: 'Card name',\n  cards: 'cards',\n  cardsNo: 'cards no',\n  cardsSorted: 'cards sorted',\n  categories: 'categories',\n  categoriesCreated: 'categories created',\n  categoriesNo: 'categoriesNo',\n  category: 'category',\n  clusters: 'clusters',\n  completed: 'Completed',\n  completedTheStudy: 'completed the study',\n  completion: 'completion',\n  couldBeMergedInto: 'could be merged into',\n  create: 'Create',\n  createStudy: 'Create a new study',\n  description: 'Description',\n  editedOn: 'Last edited on',\n  endedOn: 'Ended on',\n  filter: 'FILTER',\n  frequency: 'frequency',\n  inactive: 'Inactive',\n  launchedOn: 'Launched on',\n  message: 'Message',\n  noParticipantsYet: 'no participants yet',\n  of: 'of',\n  ongoing: 'ongoing',\n  outOf: 'out of',\n  participant: 'participant',\n  participantNo: 'participant no',\n  participants: 'participants',\n  similarity: 'similarity',\n  similarityMatrix: 'similarity matrix',\n  studies: 'STUDIES',\n  studyCreated: 'Study created',\n  thanksMessage: 'Thanks message',\n  timeTaken: 'time taken',\n  title: 'Title',\n  users: 'users',\n  wereSorterInAverage: 'were sorter in average',\n};\n\n","import enUS from './en-us';\n\n/**\n * Holds the proper localized text for usage in the UI.\n */\nclass LocalizedText {\n  /**\n   *\n   * @param {String} locale supported locales:\n   * - 'en-us' : English - United States\n   */\n  initialize(locale) {\n    switch (locale) {\n      default: {\n        this.text = enUS;\n      }\n    }\n  }\n};\n\nexport default new LocalizedText();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst StudyItem = ({title, isLive, completedNo, abandonedNo,\n  launchedDate, editDate, endDate, onClick}) => (\n  <li className='studyItem' onClick={onClick}>\n    <div className='header'>\n      <h3>{title}</h3>\n      {\n        isLive &&\n        <span className='activeSquare isLive'></span>\n      }\n      {\n        !isLive &&\n        <span className='activeSquare notLive'></span>\n\n      }\n    </div>\n    <div className='participants'>\n      <p className='completed'>{completedNo} {localizedText.text.completed}</p>\n      <p className='abandoned'>{abandonedNo} {localizedText.text.abandonded}</p>\n    </div>\n    <div className='dates'>\n      <p className='launched'>\n        {localizedText.text.launchedOn} <time\n          dateTime={launchedDate}>{launchedDate.getDate()} {launchedDate.getMonth()} {launchedDate.getFullYear()}</time>\n      </p>\n      {/* If the endDate is defined show only the end and the launched date */}\n      {\n        !endDate &&\n        <p className='edited'>\n          {localizedText.text.editedOn} <time\n            dateTime={editDate}>{editDate.getDate()} {editDate.getMonth()} {editDate.getFullYear()}</time>\n        </p>\n      }\n      {\n        endDate &&\n        <p className='ended'>\n          {localizedText.text.endedOn} <time\n            dateTime={endDate}>{endDate.getDate()} {endDate.getMonth()} {endDate.getFullYear()}</time>\n        </p>\n      }\n    </div>\n  </li>\n);\n\nStudyItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isLive: PropTypes.bool.isRequired,\n  completedNo: PropTypes.number.isRequired,\n  abandonedNo: PropTypes.number.isRequired,\n  launchedDate: PropTypes.instanceOf(Date).isRequired,\n  editDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StudyItem;\n\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport plusSign from '../../icons/plus.svg';\n\nconst CreateStudyItem = ({onClick}) => (\n  <button className=\"createStudyCard\" onClick={onClick}>\n    <img src={plusSign} alt='Plus sign'/>\n    <p>Create a study</p>\n  </button>\n);\n\nCreateStudyItem.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default CreateStudyItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport StudyItem from './StudyItem.jsx';\nimport CreateStudyItem from './CreateStudyItem.jsx';\n\nconst StudiesContainer = ({studies, onStudyClick, onCreateClick}) => (\n  <ul className=\"studies-container\">\n    {\n      studies.map((Study, index) =>\n        <StudyItem key={'studyItem'+index} title={Study.title} isLive={Study.isLive}\n          completedNo={Study.completedNo} abandonedNo={Study.abandonedNo}\n          launchedDate={Study.launchedDate} editDate={Study.editDate}\n          endDate={Study.endDate} onClick={() => onStudyClick(Study.id)}/>)\n    }\n    <CreateStudyItem onClick={onCreateClick}/>\n  </ul>\n);\n\nStudiesContainer.propTypes = {\n  studies: PropTypes.array.isRequired,\n  onCreateClick: PropTypes.func.isRequired,\n};\n\nexport default StudiesContainer;\n","import {connect} from 'react-redux';\n\nimport StudiesContainer from '../components/StudiesContainer.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    studies: state.studies.studies,\n    onStudyClick: (id) => {\n      ownProps.history.push('./study/'+id);\n    },\n    onCreateClick: () => {\n      ownProps.history.push('./create');\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst PopulateStudiesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudiesContainer);\n\nexport default PopulateStudiesContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst Filters = ({ongoing: ongoingAttr, completed: completedAttr}) => {\n  let ongoingRef = './?filter=all';\n  let completedRef = './?filter=all';\n  let ongoingStyle = '';\n  let completedStyle = '';\n\n  if (ongoingAttr) {\n    ongoingRef = './?filter=completed';\n    ongoingStyle = 'active';\n  }\n  if (completedAttr) {\n    completedRef = './?filter=ongoing';\n    completedStyle = 'active';\n  }\n\n  return (\n    <div className=\"filter-container\">\n      <p>{localizedText.text.filter}</p>\n      <a href={ongoingRef} className={ongoingStyle}>\n        {localizedText.text.ongoing}</a>\n      <a href={completedRef} className={completedStyle}>\n        {localizedText.text.completed}</a>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  ongoing: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport default Filters;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nimport '../App.css';\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport PopulateStudiesContainer\n  from '../elements/containers/PopulateStudiesContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Filters from '../elements/components/Filters.jsx';\n\n\n/**\n * The main page.\n * @return {ReactDOM}\n */\nconst Main = ({history}) =>\n  (<main>\n    <Header username='John' />\n    <Filters ongoing={true} completed={true} />\n    <PopulateStudiesContainer history={history}/>\n  </main>);\n\nexport default Main;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Page1 = ({values, dispatch}) => (\n  <div className='study-creation-card'>\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.basicInformation}</h2>\n\n    <form>\n      <input type='text' placeholder={values.title ||\n        localizedText.text.title} onChange={(e)=>\n        dispatch.onChange('title', e)}></input>\n\n      <textarea placeholder={values.description ||\n        localizedText.text.description} rows='10' cols='30' onChange={(e)=>\n        dispatch.onChange('description', e)}></textarea>\n    </form>\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev disabled\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"next\" onClick={dispatch.onNext}></button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>1</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage1.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Card = ({name, description, onNameChange, onDescriptionChange}) => (\n  <div className=\"card\">\n    <input type=\"text\" placeholder={name ||\n      localizedText.text.cardName} onChange={(e) => onNameChange(e)}></input>\n    <input type=\"text\" placeholder={description ||\n      localizedText.text.description} onChange={(e) => onDescriptionChange(e)}></input>\n  </div>\n);\n\nCard.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  onNameChange: PropTypes.func.isRequired,\n  onDescriptionChange: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n// eslint-disable-next-line no-unused-vars\nimport Card from './Card.jsx';\n\nconst Page2 = ({values, dispatch}) => (\n  <div className=\"study-creation-card\">\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.cards}</h2>\n\n    <form className=\"cards\">\n      <div className=\"card-container\">\n        {\n          values.cards.map((card) => (\n            <Card key={'card'+card.id} name={card.name}\n              description={card.description} onNameChange={(e) =>\n                dispatch.onCardNameChange(card.id, e)}\n              onDescriptionChange={(e) =>\n                dispatch.onCardDescriptionChange(card.id, e)}/>\n          ))\n        }\n      </div>\n      <button type=\"button\" onClick={dispatch.onCreateCard}>\n        {localizedText.text.addCard}</button>\n    </form>\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"next\" onClick={dispatch.onNext}></button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>2</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage2.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page2;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Page3 = ({values, dispatch}) => (\n  <div className=\"study-creation-card\">\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.message}</h2>\n\n    <form>\n      <textarea className=\"thanks message\" cols=\"30\" rows=\"10\"\n        onChange={(e) => dispatch.onMessageChange(e)}\n        placeholder={values.message || localizedText.text.thanksMessage}>\n      </textarea>\n    </form>\n\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"create\" onClick={() =>\n          dispatch.onNext(values.study)}>\n          {localizedText.text.create}</button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>3</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage3.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page3;\n","// eslint-disable-next-line no-unused-vars\nimport React, {useRef} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\nimport successImage from '../../../icons/success.svg';\n\nconst SuccessPage = ({values, dispatch}) => {\n  const urlRef = useRef(null);\n\n  return (\n    <div className=\"success-page\">\n      <h1>{L.text.studyCreated}</h1>\n      <img src={successImage} alt=\"Welcome to your new study!\"></img>\n      <div className=\"actions-container\">\n        <button onClick={() =>\n          dispatch.onButtonClick(values.url)}>Go to study</button>\n        <div className=\"url-container\">\n          <textarea className=\"url\" ref={urlRef}\n            defaultValue={values.url}></textarea>\n          <button className=\"copy\" type=\"button\" onClick={() =>\n            dispatch.onCopy(urlRef)}></button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSuccessPage.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default SuccessPage;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport Page1 from './studyCreationPages/Page1.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Page2 from './studyCreationPages/Page2.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Page3 from './studyCreationPages/Page3.jsx';\n// eslint-disable-next-line no-unused-vars\nimport SuccessPage from './studyCreationPages/SuccessPage.jsx';\n\nconst StudyCreationContainer = ({currentPage, page1Values, page1Dispatch,\n  page2Values, page2Dispatch, page3Values, page3Dispatch,\n  page4Values, page4Dispatch}) => {\n  let render;\n  if (currentPage === 1) {\n    render = <Page1 values={page1Values} dispatch={page1Dispatch}/>;\n  } else\n  if (currentPage === 2) {\n    render = <Page2 values={page2Values} dispatch={page2Dispatch}/>;\n  } else\n  if (currentPage === 3) {\n    render = <Page3 values={page3Values} dispatch={page3Dispatch}/>;\n  } else\n  if (currentPage === 4) {\n    render = <SuccessPage values={page4Values} dispatch={page4Dispatch}/>;\n  } else\n  if (currentPage === -1) {\n    render = <Redirect to='/'/>;\n  }\n  return render;\n};\n\nStudyCreationContainer.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  page1Values: PropTypes.object.isRequired,\n  page1Dispatch: PropTypes.object.isRequired,\n  page2Values: PropTypes.object.isRequired,\n  page2Dispatch: PropTypes.object.isRequired,\n  page3Values: PropTypes.object.isRequired,\n  page3Dispatch: PropTypes.object.isRequired,\n  page4Values: PropTypes.object.isRequired,\n  page4Dispatch: PropTypes.object.isRequired,\n};\n\nexport default StudyCreationContainer;\n\n\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_SENDING = 'IS_SENDING';\nexport const DID_INVALIDATE = 'DID_INVALIDATE';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n","/**\n * Handles the jws tokens and ensures the redirection in case of not validity.\n */\nclass Authenticator {\n  /**\n   * Gets the auth token from the cookie send by the server during\n   * the login/registration phase.\n   * @return {String} the jws auth token.\n   */\n  getToken() {\n    return this.getCookie('auth_token');\n  }\n}\n\n\nAuthenticator.prototype.getCookie = function(cname) {\n  const name = cname + '=';\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  for (let i = 0; i <ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\n\nexport default new Authenticator();\n","/**\n * Used to print messages and other debug data to the console.\n * @param {*} params\n */\nexport default function debugConsole(...args) {\n  console.log(args);\n}\n","export default 'http://83.212.97.237:8090';\n// export default 'http://127.0.0.1:5000';\n","import fetch from 'cross-fetch';\n\nimport auth from '../auth/authenticator';\nimport * as StatusEnum from '../static/StatusEnum';\nimport debugConsole from '../debug/debugConsole';\nimport api from './api';\n\nexport const LOAD_STUDIES = 'LOAD_STUDIES';\nexport const ADD_STUDY = 'ADD_STUDY';\n\n/**\n *\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action\n */\nexport function loadStudies(status, response, error) {\n  return {\n    type: LOAD_STUDIES,\n    payload: {\n      status: status,\n      studies: response,\n    },\n    error: error,\n  };\n}\n\n/**\n * Adds a study to the existing list of studies.\n * @param {StudyCard} study\n * @return {JSON} the action\n */\nexport function addStudy(study) {\n  return {\n    type: ADD_STUDY,\n    payload: {\n      study: study,\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * Fetches the studies from the server.\n * @return {func}\n */\nexport function fetchStudies() {\n  return function(dispatch) {\n    dispatch(loadStudies(StatusEnum.IS_FETCHING));\n\n    fetch(api+'/studies_endpoint', {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => {\n              response.json().then((json) => {\n                if (response.status === 401) {\n                  // Redirect\n                  setTimeout(window.location.reload(true), 1000);\n                  window.location.replace(json.location);\n                } else {\n                  dispatch(loadStudies(StatusEnum.SUCCESS, json.studies));\n                }\n              },\n              (error) => debugConsole('Error on decoding json: ', error));\n            },\n            (error) => debugConsole(error)\n        );\n  };\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyActions from './studyAction';\nimport auth from '../auth/authenticator';\nimport api from './api';\n\nexport const CHANGE_TITLE = 'CHANGE_TITLE';\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\nexport const ADD_CARD = 'ADD_CARD';\nexport const CHANGE_CARD_NAME = 'CHANGE_CARD_NAME';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const CHANGE_THANKS_MESSAGE = 'CHANGE_THANKS_MESSAGE';\nexport const CREATE_STUDY = 'CREATE_STUDY';\nexport const SHOW_PAGE = 'SHOW_PAGE';\nexport const OPEN_STUDY_PAGE = 'OPEN_STUDY_PAGE';\n\nexport const CHECK_TITLE = 'CHECK_TITLE';\nexport const SEND_STUDY = 'SEND_STUDY';\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} title\n * @return {JSON} the action\n */\nexport function changeTitle(title) {\n  return {\n    type: CHANGE_TITLE,\n    payload: {\n      title: title,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeDescription(description) {\n  return {\n    type: CHANGE_DESCRIPTION,\n    payload: {\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Adds a card to the study that is going to be created.\n * @param {Number} id\n * @param {String} title\n * @param {String} description\n * @return {JSON} the action\n */\nexport function addCard(id) {\n  return {\n    type: ADD_CARD,\n    payload: {\n      id: id,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of a created card.\n * @param {Number} id\n * @param {String} name\n * @return {JSON} the action\n */\nexport function changeCardName(id, name) {\n  return {\n    type: CHANGE_CARD_NAME,\n    payload: {\n      id: id,\n      name: name,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the description of a created card.\n * @param {Number} id\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeCardDescription(id, description) {\n  return {\n    type: CHANGE_CARD_DESCRIPTION,\n    payload: {\n      id: id,\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the thanks message of the study.\n * @param {String} message\n * @return {JSON} the action\n */\nexport function changeThanksMessage(message) {\n  return {\n    type: CHANGE_THANKS_MESSAGE,\n    payload: {\n      message: message,\n    },\n    error: false,\n  };\n};\n\n/**\n * Changes the showing page.\n * @param {Number} pageNo\n * @return {JSON} the action\n */\nexport function showPage(pageNo) {\n  return {\n    type: SHOW_PAGE,\n    payload: {\n      pageNo: pageNo,\n    },\n    error: false,\n  };\n}\n\n\n/**\n * Async action for checking the validity of the title.\n * @param {StatusEnum} status\n * @param {Boolean} validTitle\n * @param {Error} error\n * @return {JSON} the action\n */\nexport function checkTitle(status, validTitle, error) {\n  return {\n    type: CHECK_TITLE,\n    payload: {\n      status: status,\n      payload: {\n        validTitle: validTitle,\n      },\n    },\n    error: error,\n  };\n}\n\n/**\n * Async action for sending the created study to the server.\n * @param {*} status\n * @param {JSON} response\n * @param {*} error\n * @return {JSON} the action\n */\nexport function createStudy(status, response, error) {\n  return {\n    type: CREATE_STUDY,\n    payload: {\n      status: status,\n      study: response,\n      error: error,\n    },\n  };\n}\n\n/**\n * Redirects to the created study.\n * @return {JSON} the action\n */\nexport function openStudyPage() {\n  return {\n    type: OPEN_STUDY_PAGE,\n    payload: {\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n *\n * @param {*} title\n * @return {func}\n */\nexport function sendTitle(title) {\n  return function(dispatch) {\n    dispatch(checkTitle(StatusEnum.IS_FETCHING));\n    fetch('http://127.0.0.1:5000/studies_endpoint?title', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title: title,\n      }),\n    })\n        .then(\n            (response) => response.json().then((json) =>\n              dispatch(checkTitle(StatusEnum.SUCCESS, json.isValid))\n            )\n        );\n  };\n}\n\n/**\n * @param {Object} study\n * @return {func}\n */\nexport function sendStudy(study) {\n  return function(dispatch) {\n    dispatch(createStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint', {\n      method: 'POST',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n      body: JSON.stringify(study),\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(studyActions.addStudy(json.study));\n                dispatch(createStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport StudyCreation from '../components/StudyCreation.jsx';\nimport * as studyCreationAction from '../../actions/studyCreationAction';\n\n/**\n * The onChange handler.\n * @param {StoreDispatch} dispatch\n * @param {String} name the name of the element that has been changed:\n * - title\n * - description\n * @param {SyntheticEvent} event the event that has been triggered\n */\nfunction onElementChange(dispatch, name, event) {\n  try {\n    const value = event.target.value;\n    switch (name) {\n      case 'title': {\n        dispatch(studyCreationAction.changeTitle(value));\n        break;\n      }\n      case 'description': {\n        dispatch(studyCreationAction.changeDescription(value));\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  } catch (err) {\n    return;\n  }\n}\n\n/**\n * Constructs the state object that is going to be send.\n * @param {Object} state\n * @return {Object}\n */\nfunction constructState(state) {\n  return {\n    title: state.title,\n    description: state.description,\n    cards: state.cards,\n    message: state.thanksMessage,\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentPage: state.studyCreation.ui.currentPage,\n    page1Values: {\n      title: state.studyCreation.title,\n      titleValidity: state.studyCreation.ui.validTitle,\n    },\n    page2Values: {\n      cards: Object.values(state.studyCreation.cards),\n    },\n    page3Values: {\n      message: state.studyCreation.thanksMessage,\n      study: constructState(state.studyCreation),\n    },\n    page4Values: {\n      url: state.studyCreation.url,\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    page1Dispatch: {\n      onChange: (name, event) => {\n        onElementChange(dispatch, name, event);\n      },\n      onNext: () => {\n        dispatch(studyCreationAction.showPage(2));\n      },\n      onPrev: () => {\n      },\n    },\n    page2Dispatch: {\n      onCreateCard: () => {\n        dispatch(studyCreationAction.addCard(Date.now()));\n      },\n      onCardNameChange: (id, event) => {\n        const name = event.target.value;\n        dispatch(studyCreationAction.changeCardName(id, name));\n      },\n      onCardDescriptionChange: (id, event) => {\n        const description = event.target.value;\n        dispatch(studyCreationAction.changeCardDescription(id, description));\n      },\n      onNext: () =>{\n        dispatch(studyCreationAction.showPage(3));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(1));\n      },\n    },\n    page3Dispatch: {\n      onMessageChange: (e) => {\n        const message = e.target.value;\n        dispatch(studyCreationAction.changeThanksMessage(message));\n      },\n      onNext: (study) =>{\n        dispatch(studyCreationAction.sendStudy(study));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(2));\n      },\n    },\n    page4Dispatch: {\n      onCopy: (urlRef) => {\n        urlRef.current.select();\n        document.execCommand('copy');\n      },\n      onButtonClick: () => {\n        dispatch(studyCreationAction.openStudyPage());\n      },\n    },\n  };\n};\n\nconst StudyCreationContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudyCreation);\n\nexport default StudyCreationContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport StudyCreationContainer\n  from '../elements/containers/StudyCreationContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study creation page.\n */\nconst CreateStudy = ({history}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <StudyCreationContainer history={history}/>\n    </main>);\n};\n\nexport default CreateStudy;\n","import {connect} from 'react-redux';\n\nimport CreateStudy from './CreateStudy.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    history: ownProps.history,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst CreateStudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CreateStudy);\n\nexport default CreateStudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst StudyMenu = ({selectedNo, onClicks}) => {\n  const styles = [];\n  for (let i = 0; i < 5; i++) {\n    styles[i] = '';\n  }\n  styles[selectedNo] = 'selected';\n\n  return (\n    <div className=\"study-menu\">\n      <button onClick={onClicks.participant} className={styles[0]}>\n        {L.text.participant}</button>\n      <button onClick={onClicks.cards} className={styles[1]}>\n        {L.text.cards}</button>\n      <button onClick={onClicks.categories} className={styles[2]}>\n        {L.text.categories}</button>\n      <button onClick={onClicks.similarityMatrix} className={styles[3]}>\n        {L.text.similarityMatrix}</button>\n      <button onClick={onClicks.clusters} className={styles[4]}>\n        {L.text.clusters}</button>\n    </div>);\n};\n\nStudyMenu.propsTypes = {\n  selectedNo: PropTypes.number.isRequired,\n  onClick: PropTypes.object.isRequired,\n};\n\nexport default StudyMenu;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataTable = ({headers, data}) => {\n  return (\n    <div className=\"data-container\">\n      <table>\n        <thead>\n          <tr>\n            {\n              headers.map((header) =>\n                <th key={'header'+header}>{header}</th>)\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((line, index) =>\n              <tr key={'line'+index}>\n                {\n                  line.map((item, index) => {\n                    if (item instanceof Array) {\n                      return <td key={'item'+index}><ul>{\n                        item.map((child, index) =>\n                          <li key={'child'+index}>{child}</li>)}</ul></td>;\n                    }\n                    return <td key={'item'+index}>{item}</td>;\n                  })\n                }\n              </tr>\n            )\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDataTable.propTypes = {\n  headers: PropTypes.arrayOf(String).isRequired,\n  data: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default DataTable;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst BarGraph = ({percentage, sub, total, entity, title, action}) => {\n  return (\n    <div className=\"bar-graph-container\">\n      <p>{title}</p>\n      <div className=\"graphic\">\n        <div className=\"completion\" style={{height: percentage}}>\n        </div>\n        <div className=\"index\" style={{bottom: percentage}}>\n          <p>{percentage}</p>\n        </div>\n      </div>\n      <div className=\"description\">\n        <p><span className=\"emphasized\">{sub}</span> {L.text.outOf} <span\n          className=\"emphasized\">{total}</span> {entity}</p>\n        <p>{action}</p>\n      </div>\n    </div>\n  );\n};\n\nBarGraph.propTypes = {\n  percentage: PropTypes.string.isRequired,\n  sub: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  entity: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n};\n\nexport default BarGraph;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nimport L from '../../../localization/LocalizedText';\nimport noParticipantsImage from '../../../icons/empty.svg';\n\nconst NoParticipants = () => (\n  <div className=\"no-participants-page\">\n    <h1>{L.text.noParticipantsYet}</h1>\n    <img src={noParticipantsImage} alt=\"Nothing found\"></img>\n  </div>\n);\n\nexport default NoParticipants;\n","// eslint-disable-next-line no-unused-vars\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport StudyMenu from '../components/studyPageElements/StudyMenu.jsx';\n// eslint-disable-next-line no-unused-vars\nimport DataTable from '../components/studyPageElements/DataTable.jsx';\n// eslint-disable-next-line no-unused-vars\nimport BarGraph from '../components/studyPageElements/BarGraph.jsx';\n// eslint-disable-next-line no-unused-vars\nimport NoParticipants from './studyPageElements/NoParticipants.jsx';\nimport L from '../../localization/LocalizedText';\n\n/**\n *\n */\nclass Study extends Component {\n  /**\n   *\n   */\n  componentDidMount() {\n    this.props.loadStudy();\n  }\n\n  /**\n   *\n   * @return {ReactDOM}\n   */\n  render() {\n    const {isFetching, title, isLive, launched, menuValues,\n      menuDispatch, graphValues, tableValues,\n      tableDispatch, noParticipants} = this.props;\n\n    if (isFetching || isFetching === undefined) {\n      return <p>Loading...</p>;\n    }\n\n    if (noParticipants) {\n      return <NoParticipants/>;\n    }\n\n    return (\n      <div className=\"study-page\">\n        <span className=\"header\">\n          <h1>{title}</h1>\n          <button className=\"edit\"></button>\n        </span>\n        <span className=\"active\">\n          {\n            isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare isLive'></span>\n              <p>{L.text.active}</p>\n            </div>\n          }\n          {\n            !isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare notLive'></span>\n              <p>{L.text.inactive}</p>\n            </div>\n          }\n          <h2 className=\"date\">{L.text.launchedOn} {launched.getDate()} {\n            launched.getMonth()} {launched.getFullYear()}</h2>\n        </span>\n        <StudyMenu selectedNo={menuValues.selectedNo} onClicks=\n          {menuDispatch.onClicks}/>\n        <div className=\"content\">\n          <BarGraph percentage={graphValues.percentage} sub={graphValues.sub}\n            total={graphValues.total} entity={graphValues.entity}\n            title={graphValues.title} action={graphValues.action}/>\n          <DataTable headers={tableValues.headers} data={tableValues.data}/>\n        </div>\n      </div>\n    );\n  };\n}\n\nStudy.propTypes = {\n  title: PropTypes.string,\n  isLive: PropTypes.bool,\n  launched: PropTypes.objectOf(Date),\n  menuValues: PropTypes.object.isRequired,\n  menuDispatch: PropTypes.object.isRequired,\n  graphValues: PropTypes.object.isRequired,\n  tableValues: PropTypes.object.isRequired,\n  tableDispatch: PropTypes.object.isRequired,\n};\n\nexport default Study;\n","import fetch from 'cross-fetch';\nimport * as StatusEnum from '../static/StatusEnum';\nimport auth from '../auth/authenticator';\nimport api from './api';\n\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\nexport const LOAD_STUDY = 'LOAD_STUDY';\n\n/**\n * Changes the view that the study page is showing.\n * @param {Number} viewNo\n * @return {JSON} the action.\n */\nexport function changeView(viewNo) {\n  return {\n    type: CHANGE_VIEW,\n    payload: {\n      no: viewNo,\n    },\n    error: false,\n  };\n}\n\n/**\n * Async action for loading a study, given an id.\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action.\n */\nexport function loadStudy(status, response, error) {\n  return {\n    type: LOAD_STUDY,\n    payload: {\n      status: status,\n      study: response,\n    },\n    error: error,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * @param {String} id\n * @return {func}\n */\nexport function fetchStudy(id) {\n  return function(dispatch) {\n    dispatch(loadStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint?id='+id, {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(loadStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport Study from '../components/Study.jsx';\nimport L from '../../localization/LocalizedText';\nimport * as studyAction from '../../actions/studyPageAction';\n\n/**\n * Finds the proper header strings based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the headers for the selected item.\n */\nfunction getHeaders(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return [\n        L.text.participantNo,\n        L.text.timeTaken,\n        L.text.cardsSorted,\n        L.text.categoriesCreated,\n      ];\n    }\n    case 1: {\n      return [\n        L.text.card,\n        L.text.categoriesNo,\n        L.text.categories,\n        L.text.frequency,\n      ];\n    }\n    case 2: {\n      return [\n        L.text.category,\n        L.text.cardsNo,\n        L.text.cards,\n        L.text.frequency,\n        L.text.participants,\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n}\n\n/**\n * Finds the proper graph values based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {[]} the array containing the values for the graph element.\n */\nfunction getGraphValues(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return {\n        percentage: state.study.participants.completion,\n        sub: state.study.participants.completed,\n        total: state.study.participants.total,\n        entity: L.text.users,\n        title: L.text.completion,\n        action: L.text.completedTheStudy,\n      };\n    }\n    case 1: {\n      return {\n        percentage: state.study.cards.average,\n        sub: state.study.cards.sorted,\n        total: state.study.cards.total,\n        entity: L.text.cards,\n        title: L.text.averageSort,\n        action: L.text.wereSorterInAverage,\n      };\n    }\n    case 2: {\n      return {\n        percentage: state.study.categories.similarity,\n        sub: state.study.categories.similar,\n        total: state.study.categories.total,\n        entity: L.text.categories,\n        title: L.text.similarity,\n        action: L.text.couldBeMergedInto,\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\n/**\n * Finds the proper data based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the arrays of the data for\n * the selected item.\n */\nfunction getData(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return state.study.participants.data;\n    }\n    case 1: {\n      return state.study.cards.data;\n    }\n    case 2: {\n      return state.study.categories.data;\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.study.isFetching,\n    title: state.study.title,\n    isLive: state.study.isLive,\n    launched: state.study.launchedDate,\n    noParticipants: state.study.noParticipants,\n    menuValues: {\n      selectedNo: state.study.selectedItem,\n    },\n    graphValues: getGraphValues(state),\n    tableValues: {\n      headers: getHeaders(state),\n      data: getData(state),\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadStudy: () => dispatch(studyAction.fetchStudy(ownProps.id)),\n    menuDispatch: {\n      onClicks: {\n        participant: () => {\n          dispatch(studyAction.changeView(0));\n        },\n        cards: () => {\n          dispatch(studyAction.changeView(1));\n        },\n        categories: () => {\n          dispatch(studyAction.changeView(2));\n        },\n        similarityMatrix: () => {\n        },\n        clusters: () => {\n        },\n      },\n    },\n    tableDispatch: {\n\n    },\n  };\n};\n\nconst StudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Study);\n\nexport default StudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport StudyContainer from '../elements/containers/StudyContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study page.\n */\nconst StudyPage = ({history, match}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <StudyContainer id={match.params.id}/>\n    </main>);\n};\n\nexport default StudyPage;\n","import fetch from 'cross-fetch';\nimport api from './api';\nimport auth from '../auth/authenticator';\nimport * as StatusEnum from '../static/StatusEnum';\n\nexport const REQUEST_USERNAME = 'REQUEST_USERNAME';\n\n/**\n * Async action that requests the current username (based on the jws token).\n * @param {StatusEnum} status\n * @param {String} username\n * @param {Error} error\n * @return {JSON} the action.\n */\nexport function requestingUsername(status, username, error) {\n  return {\n    type: REQUEST_USERNAME,\n    payload: {\n      status: status,\n      username: username,\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * Fetches the username from the server.\n * @return {func}\n */\nexport function fetchUsername() {\n  return function(dispatch) {\n    dispatch(requestingUsername(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint?username=true', {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status !== 401) {\n                dispatch(requestingUsername(StatusEnum.SUCCESS, json.username));\n              }\n            }\n            )\n        );\n  };\n}\n","\n/**\n * Represents the data model of the study-card object, found in the main page\n */\nexport default class StudyCard {\n  /**\n   *\n   * @param {Number} id\n   * @param {String} title\n   * @param {Boolean} isLive\n   * @param {Number} completedNo\n   * @param {Number} abandonedNo\n   * @param {Date} launchedDate\n   * @param {Date} editDate\n   * @param {Date} endDate\n   */\n  constructor(id, title, isLive, completedNo, abandonedNo,\n      launchedDate, editDate, endDate) {\n    this.id = id;\n    this.title = title;\n    this.isLive = isLive;\n    this.completedNo = completedNo;\n    this.abandonedNo = abandonedNo;\n    this.launchedDate = launchedDate;\n    this.editDate = editDate;\n    this.endDate = endDate;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport headerReducer from './headerReducer';\nimport studyReducer from './studyReducer';\nimport studyCreationReducer from './studyCreationReducer';\nimport studyPageReducer from './studyPageReducer';\n\nconst app = combineReducers({\n  header: headerReducer,\n  studies: studyReducer,\n  studyCreation: studyCreationReducer,\n  study: studyPageReducer,\n});\n\nexport default app;\n","import * as headerActions from '../actions/headerAction';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {headerState} state\n * @param {headerActions} action\n * @return {headerState}\n */\nexport default function headerReducer(state={}, action) {\n  switch (action.type) {\n    case headerActions.REQUEST_USERNAME: {\n      return Object.assign({}, state, {\n        'username': (action.payload.status === StatusEnum.SUCCESS) ?\n                    action.payload.username : '',\n      });\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyAction';\nimport StudyCard from '../elements/StudyCard';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDIES: {\n      const newState = Object.assign({}, state);\n\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        if (!action.payload.studies || action.payload.studies.length === 0) {\n          newState.studies = [];\n        } else {\n          newState.studies = action.payload.studies.map(\n              ({id, title, isLive, completedNo, abandonedNo,\n                launchedDate, editDate, endDate}) => new StudyCard(\n                  id, title, isLive, completedNo, abandonedNo,\n                  new Date(launchedDate),\n                  new Date(editDate),\n                  !isLive? new Date(endDate) : undefined\n              )\n          );\n        };\n      }\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.ADD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n\n      newState.studies.push(new StudyCard(\n          study.id, study.title, study.isLive, study.completedNo,\n          study.abandonedNo,\n          new Date(study.launchedDate),\n          new Date(study.editDate),\n          undefined));\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyCreationActions from '../actions/studyCreationAction';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyCreationReducer(state={}, action) {\n  switch (action.type) {\n    case studyCreationActions.CHANGE_TITLE: {\n      return Object.assign({}, state, {\n        'title': action.payload.title,\n      });\n    }\n    case studyCreationActions.CHANGE_DESCRIPTION: {\n      return Object.assign({}, state, {\n        'description': action.payload.description,\n      });\n    }\n    case studyCreationActions.ADD_CARD: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id] = {\n        id: action.payload.id,\n        title: undefined,\n        description: undefined,\n      };\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_NAME: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].name =\n        action.payload.name;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_DESCRIPTION: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].description =\n        action.payload.description;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_THANKS_MESSAGE: {\n      return Object.assign({}, state, {\n        'thanksMessage': action.payload.message,\n      });\n    }\n    case studyCreationActions.SHOW_PAGE: {\n      const newState = Object.assign({}, state);\n      newState['ui'].currentPage = action.payload.pageNo;\n      return newState;\n    }\n    case studyCreationActions.CHECK_TITLE: {\n      const newState = Object.assign({}, state);\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.ui.validTitle = action.payload.validTitle;\n      }\n      newState.ui.titleFetching = action.payload.status;\n      return newState;\n    }\n    case studyCreationActions.OPEN_STUDY_PAGE: {\n      window.location.assign(state.url);\n      return state;\n    }\n    case studyCreationActions.CREATE_STUDY: {\n      const newState = Object.assign({}, state);\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.url = action.payload.study.url;\n        newState.ui.currentPage = 4;\n      }\n      newState.ui.studySending = action.payload.status;\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyPageAction';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {stateSchema} state\n * @param {studyPageAction} action\n * @return {stateSchema}\n */\nexport default function studyPageReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.id = study.id;\n        newState.title = study.title;\n        newState.isLive = study.isLive;\n        newState.launchedDate = new Date(study.launchedDate);\n        newState.ended = study.ended ? new Date(study.ended): undefined;\n        newState.noParticipants = study.participants === 0 ? true : false;\n        newState.participants = {\n          completion: study.participants ? study.participants.completion: '0%',\n          total: study.participants ? study.participants.total: 0,\n          completed: study.participants ? study.participants.completed: 0,\n          data: study.participants ? study.participants.data: [],\n        };\n        newState.cards = {\n          average: study.cards ? study.cards.average: '0%',\n          total: study.cards ? study.cards.total: 0,\n          sorted: study.cards ? study.cards.sorted: 0,\n          data: study.cards ? study.cards.data: [],\n        };\n        newState.categories = {\n          similarity: study.categories ? study.categories.similarity: '0%',\n          total: study.categories ? study.categories.total: 0,\n          similar: study.categories ? study.categories.similar: 0,\n          merged: study.categories ? study.categories.merged: 0,\n          data: study.categories ? study.categories.data: [],\n        };\n      }\n\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.CHANGE_VIEW: {\n      return Object.assign({}, state, {\n        'selectedItem': action.payload.no,\n      });\n    }\n    default: {\n      return state;\n    }\n  };\n}\n","const initialState = {\n  header: {\n    username: undefined,\n    profilePic: '../icons/sample-user.svg',\n  },\n  studies: {\n    isFetching: undefined,\n    didInvalidate: undefined,\n    studies: [],\n  },\n  studyCreation: {\n    title: 'Title',\n    description: 'Description',\n    url: undefined,\n    cards: {\n      1: {\n        id: 1,\n        name: undefined,\n        description: undefined,\n      },\n    },\n    thanksMessage: 'Thanks',\n    ui: {\n      currentPage: 1,\n      titleFetching: undefined,\n      validTitle: true,\n      studySending: undefined,\n    },\n  },\n  study: {\n    isFetching: undefined,\n    id: undefined,\n    title: undefined,\n    isLive: undefined,\n    launchedDate: undefined,\n    ended: undefined,\n    selectedItem: 0,\n    noParticipants: true,\n    participants: {\n      completion: undefined,\n      total: undefined,\n      completed: undefined,\n      data: [],\n    },\n    cards: {\n      average: undefined,\n      total: undefined,\n      sorted: undefined,\n      data: [],\n    },\n    categories: {\n      similarity: undefined,\n      total: undefined,\n      similar: undefined,\n      merged: undefined,\n      data: [],\n    },\n  },\n};\n\nexport default initialState;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line no-unused-vars\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport Main from './pages/Main.jsx';\nimport CreateStudy from './pages/CreateStudyContainer.jsx';\nimport StudyPage from './pages/StudyPage.jsx';\nimport initializeStore from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = initializeStore();\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Route exact path='/' component={Main}/>\n        <Route path='/create' component={CreateStudy}/>\n        <Route path={`${process.env.PUBLIC_URL}/study/:id`}\n          component={StudyPage}/>\n      </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n// import logger from 'redux-logger';\n\nimport app from './reducers/indexReducer';\nimport initialState from './reducers/stateSchema';\nimport localizedText from './localization/LocalizedText';\n\nimport {fetchStudies} from './actions/studyAction';\nimport {fetchUsername} from './actions/headerAction';\n\n/**\n * @return {Store}\n */\nexport default function initializeStore() {\n  const store = createStore(app, initialState, applyMiddleware(\n      thunkMiddleware,\n      // logger\n  ));\n  // const store = createStore(app, window.STATE_FROM_SERVER);\n  localizedText.initialize('en-us');\n\n  const unsuscribe = store.subscribe(() => {});\n\n  // runTests(store);\n  store.dispatch(fetchUsername());\n  store.dispatch(fetchStudies());\n\n\n  unsuscribe();\n  return store;\n}\n"],"sourceRoot":""}