{"version":3,"sources":["demo/profile.jpeg","icons/sample-user.svg","icons/plus.svg","icons/success.svg","icons/empty.svg","elements/components/Header.jsx","elements/containers/HeaderContainer.jsx","localization/en-us.js","localization/LocalizedText.js","elements/components/StudyItem.jsx","elements/components/CreateStudyItem.jsx","elements/components/StudiesContainer.jsx","elements/containers/PopulateStudiesContainer.jsx","elements/components/Filters.jsx","pages/Main.jsx","elements/components/studyCreationPages/Page1.jsx","elements/components/studyCreationPages/Card.jsx","elements/components/studyCreationPages/Page2.jsx","elements/components/studyCreationPages/Page3.jsx","elements/components/studyCreationPages/SuccessPage.jsx","elements/components/StudyCreation.jsx","static/StatusEnum.js","auth/authenticator.js","debug/debugConsole.js","actions/api.js","actions/studyAction.js","actions/studyCreationAction.js","elements/containers/StudyCreationContainer.jsx","pages/CreateStudy.jsx","pages/CreateStudyContainer.jsx","elements/components/studyPageElements/StudyMenu.jsx","elements/components/studyPageElements/DataTable.jsx","elements/components/studyPageElements/BarGraph.jsx","elements/components/studyPageElements/NoParticipants.jsx","elements/components/studyPageElements/SimilarityMatrix.jsx","elements/components/Study.jsx","actions/studyPageAction.js","elements/containers/StudyContainer.jsx","pages/StudyPage.jsx","actions/headerAction.js","elements/StudyCard.js","reducers/indexReducer.js","reducers/headerReducer.js","reducers/studyReducer.js","reducers/studyCreationReducer.js","reducers/studyPageReducer.js","reducers/stateSchema.js","serviceWorker.js","index.js","Store.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","username","profilePic","react_default","a","createElement","href","id","className","src","demoImage","alt","HeaderContainer","connect","state","header","dispatch","en_us","abandonded","active","addCard","averageSort","basicInformation","card","cardName","cards","cardsNo","cardsSorted","categories","categoriesCreated","categoriesNo","category","clusters","completed","completedTheStudy","completion","couldBeMergedInto","create","createStudy","description","editedOn","endedOn","filter","fillMeOut","frequency","inactive","launchedOn","message","noParticipantsYet","of","ofTheParticipants","ongoing","outOf","participant","participantNo","participants","similarity","similarityMatrix","studies","studyCreated","thanksMessage","timeTaken","title","users","wasGroupedTogetherBy","wereSorterInAverage","localization_LocalizedText","locale","this","text","enUS","StudyItem","isLive","completedNo","abandonedNo","launchedDate","editDate","endDate","onClick","localizedText","dateTime","getDate","getMonth","getFullYear","CreateStudyItem","plusSign","StudiesContainer","onStudyClick","onCreateClick","map","Study","index","components_StudyItem","key","components_CreateStudyItem","PopulateStudiesContainer","ownProps","history","push","Filters","ongoingRef","completedRef","ongoingStyle","completedStyle","Main","containers_HeaderContainer","components_Filters","containers_PopulateStudiesContainer","Page1","values","errors","L","type","placeholder","onChange","e","rows","cols","onPrev","onNext","Card","name","onNameChange","onDescriptionChange","Page2","cardContainerRef","useRef","ref","studyCreationPages_Card","onCardNameChange","onCardDescriptionChange","onCreateCard","Page3","onMessageChange","study","SuccessPage","urlRef","successImage","onButtonClick","defaultValue","share_url","onCopy","StudyCreationContainer","render","currentPage","page1Values","page1Errors","page1Dispatch","page2Values","page2Errors","page2Dispatch","page3Values","page3Errors","page3Dispatch","page4Values","page4Dispatch","studyCreationPages_Page1","studyCreationPages_Page2","studyCreationPages_Page3","studyCreationPages_SuccessPage","react_router","to","IS_FETCHING","SUCCESS","Authenticator","getCookie","prototype","cname","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","authenticator","debugConsole","_len","arguments","args","Array","_key","console","log","api","LOAD_STUDIES","ADD_STUDY","loadStudies","status","response","error","payload","CHANGE_TITLE","CHANGE_DESCRIPTION","ADD_CARD","CHANGE_CARD_NAME","CHANGE_CARD_DESCRIPTION","CHANGE_THANKS_MESSAGE","CREATE_STUDY","SHOW_PAGE","OPEN_STUDY_PAGE","TOGGLE_TITLE_ERROR","TOGGLE_DESCRIPTION_ERROR","TOGGLE_CARD_ERROR","TOGGLE_THANKS_ERROR","showPage","pageNo","toggleTitleError","toggleDescriptionError","toggleCardError","toggleThanksError","sendStudy","StatusEnum","fetch","method","withCredentials","credentials","headers","Content-Type","Authorization","auth","getToken","Access-Control-Allow-Credentials","body","JSON","stringify","then","json","setTimeout","window","location","reload","replace","onElementChange","event","value","target","studyCreationAction","err","constructState","studyCreation","ui","errorTitle","errorDescription","Object","errorCards","errorMessage","current","scrollHeight","Date","now","scrollTop","clientHeight","select","execCommand","StudyCreation","CreateStudy","containers_StudyCreationContainer","CreateStudyContainer","StudyMenu","selectedNo","onClicks","styles","propsTypes","PropTypes","number","isRequired","object","DataTable","data","line","item","child","BarGraph","percentage","sub","total","entity","action","style","height","bottom","NoParticipants","shareUrl","copyUrl","noParticipantsImage","SimilarityMatrix","selected","onHover","index2","onMouseOver","props","loadStudy","_this$props","isFetching","launched","menuValues","menuDispatch","graphValues","tableValues","noParticipants","tableDispatch","similarityPage","similarityHover","selectedCards","undefined","studyPageElements_NoParticipants","studyPageElements_StudyMenu","studyPageElements_SimilarityMatrix","studyPageElements_BarGraph","studyPageElements_DataTable","Component","CHANGE_VIEW","LOAD_STUDY","CHANGE_HOVERED_CARDS","changeView","viewNo","no","getHeaders","selectedItem","getGraphValues","average","sorted","similar","getData","StudyContainer","studyAction","index1","StudyPage","match","containers_StudyContainer","params","REQUEST_USERNAME","requestingUsername","StudyCard","classCallCheck","app","combineReducers","headerActions","assign","studyActions","newState","studyCreationActions","url_to_study","studySending","ended","merged","initialState","didInvalidate","1","titleFetching","validTitle","Boolean","hostname","store","createStore","applyMiddleware","thunkMiddleware","initialize","unsuscribe","subscribe","initializeStore","ReactDOM","es","react_router_dom","exact","path","component","concat","process","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9f2a1bb6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ed50a564.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/sample-user.efe01b90.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.648c7e93.svg\";","module.exports = __webpack_public_path__ + \"static/media/success.a0af0ddb.svg\";","module.exports = __webpack_public_path__ + \"static/media/empty.cfb49f55.svg\";","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport demoImage from '../../icons/sample-user.svg';\n\nconst Header = ({username, profilePic}) => {\n  return (<header>\n    <a href=\"/\" id=\"logo\">Card Sorter</a>\n    <div className=\"profile\">\n      <p>{username}</p>\n      <img src={demoImage} alt='Profile' />\n    </div>\n  </header>);\n};\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired,\n  profilePic: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import {connect} from 'react-redux';\n\nimport Header from '../components/Header.jsx';\n\nconst mapStateToProps = (state) => {\n  return {\n    username: state.header.username,\n    profilePic: state.header.profilePic,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Header);\n\nexport default HeaderContainer;\n","export default {\n  abandonded: 'Abandoned',\n  active: 'Active',\n  addCard: 'Add Card',\n  averageSort: 'average sort',\n  basicInformation: 'Basic Information',\n  card: 'card',\n  cardName: 'Card name',\n  cards: 'cards',\n  cardsNo: 'cards no',\n  cardsSorted: 'cards sorted',\n  categories: 'categories',\n  categoriesCreated: 'categories created',\n  categoriesNo: 'categoriesNo',\n  category: 'category',\n  clusters: 'clusters',\n  completed: 'Completed',\n  completedTheStudy: 'completed the study',\n  completion: 'completion',\n  couldBeMergedInto: 'could be merged into',\n  create: 'Create',\n  createStudy: 'Create a new study',\n  description: 'Description',\n  editedOn: 'Last edited on',\n  endedOn: 'Ended on',\n  filter: 'FILTER',\n  fillMeOut: 'fill me out',\n  frequency: 'frequency',\n  inactive: 'Inactive',\n  launchedOn: 'Launched on',\n  message: 'Message',\n  noParticipantsYet: 'no participants yet',\n  of: 'of',\n  ofTheParticipants: 'of the participants.',\n  ongoing: 'ongoing',\n  outOf: 'out of',\n  participant: 'participant',\n  participantNo: 'participant no',\n  participants: 'participants',\n  similarity: 'similarity',\n  similarityMatrix: 'similarity matrix',\n  studies: 'STUDIES',\n  studyCreated: 'Study created',\n  thanksMessage: 'Thanks message',\n  timeTaken: 'time taken',\n  title: 'Title',\n  users: 'users',\n  wasGroupedTogetherBy: 'was grouped together by ',\n  wereSorterInAverage: 'were sorter in average',\n};\n\n","import enUS from './en-us';\n\n/**\n * Holds the proper localized text for usage in the UI.\n */\nclass LocalizedText {\n  /**\n   *\n   * @param {String} locale supported locales:\n   * - 'en-us' : English - United States\n   */\n  initialize(locale) {\n    switch (locale) {\n      default: {\n        this.text = enUS;\n      }\n    }\n  }\n};\n\nexport default new LocalizedText();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst StudyItem = ({title, isLive, completedNo, abandonedNo,\n  launchedDate, editDate, endDate, onClick}) => (\n  <li className='studyItem' onClick={onClick}>\n    <div className='header'>\n      <h3>{title}</h3>\n      {\n        isLive &&\n        <span className='activeSquare isLive'></span>\n      }\n      {\n        !isLive &&\n        <span className='activeSquare notLive'></span>\n\n      }\n    </div>\n    <div className='participants'>\n      <p className='completed'>{completedNo} {localizedText.text.completed}</p>\n      <p className='abandoned'>{abandonedNo} {localizedText.text.abandonded}</p>\n    </div>\n    <div className='dates'>\n      <p className='launched'>\n        {localizedText.text.launchedOn} <time\n          dateTime={launchedDate}>{launchedDate.getDate()} {launchedDate.getMonth()} {launchedDate.getFullYear()}</time>\n      </p>\n      {/* If the endDate is defined show only the end and the launched date */}\n      {\n        !endDate &&\n        <p className='edited'>\n          {localizedText.text.editedOn} <time\n            dateTime={editDate}>{editDate.getDate()} {editDate.getMonth()} {editDate.getFullYear()}</time>\n        </p>\n      }\n      {\n        endDate &&\n        <p className='ended'>\n          {localizedText.text.endedOn} <time\n            dateTime={endDate}>{endDate.getDate()} {endDate.getMonth()} {endDate.getFullYear()}</time>\n        </p>\n      }\n    </div>\n  </li>\n);\n\nStudyItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isLive: PropTypes.bool.isRequired,\n  completedNo: PropTypes.number.isRequired,\n  abandonedNo: PropTypes.number.isRequired,\n  launchedDate: PropTypes.instanceOf(Date).isRequired,\n  editDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StudyItem;\n\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport plusSign from '../../icons/plus.svg';\n\nconst CreateStudyItem = ({onClick}) => (\n  <button className=\"createStudyCard\" onClick={onClick}>\n    <img src={plusSign} alt='Plus sign'/>\n    <p>Create a study</p>\n  </button>\n);\n\nCreateStudyItem.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default CreateStudyItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport StudyItem from './StudyItem.jsx';\nimport CreateStudyItem from './CreateStudyItem.jsx';\n\nconst StudiesContainer = ({studies, onStudyClick, onCreateClick}) => (\n  <ul className=\"studies-container\">\n    {\n      studies.map((Study, index) =>\n        <StudyItem key={'studyItem'+index} title={Study.title} isLive={Study.isLive}\n          completedNo={Study.completedNo} abandonedNo={Study.abandonedNo}\n          launchedDate={Study.launchedDate} editDate={Study.editDate}\n          endDate={Study.endDate} onClick={() => onStudyClick(Study.id)}/>)\n    }\n    <CreateStudyItem onClick={onCreateClick}/>\n  </ul>\n);\n\nStudiesContainer.propTypes = {\n  studies: PropTypes.array.isRequired,\n  onCreateClick: PropTypes.func.isRequired,\n};\n\nexport default StudiesContainer;\n","import {connect} from 'react-redux';\n\nimport StudiesContainer from '../components/StudiesContainer.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    studies: state.studies.studies,\n    onStudyClick: (id) => {\n      ownProps.history.push('./study/'+id);\n    },\n    onCreateClick: () => {\n      ownProps.history.push('./create');\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst PopulateStudiesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudiesContainer);\n\nexport default PopulateStudiesContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst Filters = ({ongoing: ongoingAttr, completed: completedAttr}) => {\n  let ongoingRef = './?filter=all';\n  let completedRef = './?filter=all';\n  let ongoingStyle = '';\n  let completedStyle = '';\n\n  if (ongoingAttr) {\n    ongoingRef = './?filter=completed';\n    ongoingStyle = 'active';\n  }\n  if (completedAttr) {\n    completedRef = './?filter=ongoing';\n    completedStyle = 'active';\n  }\n\n  return (\n    <div className=\"filter-container\">\n      <p>{localizedText.text.filter}</p>\n      <a href={ongoingRef} className={ongoingStyle}>\n        {localizedText.text.ongoing}</a>\n      <a href={completedRef} className={completedStyle}>\n        {localizedText.text.completed}</a>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  ongoing: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport default Filters;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nimport '../App.css';\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport PopulateStudiesContainer\n  from '../elements/containers/PopulateStudiesContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Filters from '../elements/components/Filters.jsx';\n\n\n/**\n * The main page.\n * @return {ReactDOM}\n */\nconst Main = ({history}) =>\n  (<main>\n    <Header username='John' />\n    <Filters ongoing={true} completed={true} />\n    <PopulateStudiesContainer history={history}/>\n  </main>);\n\nexport default Main;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst Page1 = ({values, errors, dispatch}) => (\n  <div className='study-creation-card'>\n    <h1>{L.text.createStudy}</h1>\n    <h2>{L.text.basicInformation}</h2>\n\n    <form>\n      <div className=\"error-holder\">\n        <input type='text' placeholder={values.title ||\n          L.text.title} onChange={(e)=>\n          dispatch.onChange('title', e)}></input>\n        {\n          errors.title &&\n          <div className=\"error-message\"><p>{L.text.fillMeOut}</p></div>\n        }\n      </div>\n      <div className=\"error-holder\">\n        <textarea placeholder={values.description ||\n          L.text.description} rows='10' cols='30' onChange={(e)=>\n          dispatch.onChange('description', e)}></textarea>\n        {\n          errors.description &&\n          <div className=\"error-message\"><p>{L.text.fillMeOut}</p></div>\n        }\n      </div>\n    </form>\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev disabled\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"next\" onClick={() =>\n          dispatch.onNext(values.title, values.description)}></button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>1</p>\n        <p>{L.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage1.propTypes = {\n  values: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page1;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Card = ({name, description, onNameChange, onDescriptionChange}) => (\n  <div className=\"card\">\n    <input type=\"text\" placeholder={name ||\n      localizedText.text.cardName} onChange={(e) => onNameChange(e)}></input>\n    <input type=\"text\" placeholder={description ||\n      localizedText.text.description} onChange={(e) =>\n      onDescriptionChange(e)}></input>\n  </div>\n);\n\nCard.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  onNameChange: PropTypes.func.isRequired,\n  onDescriptionChange: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","// eslint-disable-next-line no-unused-vars\nimport React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n// eslint-disable-next-line no-unused-vars\nimport Card from './Card.jsx';\n\nconst Page2 = ({values, errors, dispatch}) => {\n  const cardContainerRef = useRef(null);\n\n  return (\n    <div className=\"study-creation-card\">\n      <h1>{L.text.createStudy}</h1>\n      <h2>{L.text.cards}</h2>\n\n      <form className=\"cards\">\n        <div className=\"error-holder\">\n          <div className=\"card-container\" ref={cardContainerRef}>\n            {\n              values.cards.map((card) => (\n                <Card key={'card'+card.id} name={card.name}\n                  description={card.description} onNameChange={(e) =>\n                    dispatch.onCardNameChange(card.id, e)}\n                  onDescriptionChange={(e) =>\n                    dispatch.onCardDescriptionChange(card.id, e)}/>\n              ))\n            }\n          </div>\n          {\n            errors.cards &&\n            <div className=\"error-message\"><p>{L.text.fillMeOut}</p></div>\n          }\n        </div>\n        <button type=\"button\" onClick={() =>\n          dispatch.onCreateCard(cardContainerRef)}>\n          {L.text.addCard}</button>\n      </form>\n      <div className=\"bottom-container\">\n        <div className=\"btn-container\">\n          <button className=\"prev\"\n            onClick={dispatch.onPrev}></button>\n          <button className=\"next\" onClick={() =>\n            dispatch.onNext(values.cards)}></button>\n        </div>\n        <div className=\"page-no-container\">\n          <p>2</p>\n          <p>{L.text.of}</p>\n          <p>3</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nPage2.propTypes = {\n  values: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page2;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst Page3 = ({values, errors, dispatch}) => (\n  <div className=\"study-creation-card\">\n    <h1>{L.text.createStudy}</h1>\n    <h2>{L.text.message}</h2>\n\n    <form>\n      <div className=\"error-holder\">\n        <textarea className=\"thanks message\" cols=\"30\" rows=\"10\"\n          onChange={(e) => dispatch.onMessageChange(e)}\n          placeholder={values.message || L.text.thanksMessage}>\n        </textarea>\n        {\n          errors.message &&\n          <div className=\"error-message\"><p>{L.text.fillMeOut}</p></div>\n        }\n      </div>\n    </form>\n\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"create\" onClick={() =>\n          dispatch.onNext(values.study)}>\n          {L.text.create}</button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>3</p>\n        <p>{L.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage3.propTypes = {\n  values: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page3;\n","// eslint-disable-next-line no-unused-vars\nimport React, {useRef} from 'react';\n// eslint-disable-next-line no-unused-vars\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\nimport successImage from '../../../icons/success.svg';\n\nconst SuccessPage = ({values, dispatch}) => {\n  const urlRef = useRef(null);\n\n  return (\n    <div className=\"success-page\">\n      <h1>{L.text.studyCreated}</h1>\n      <img src={successImage} alt=\"Welcome to your new study!\"></img>\n      <div className=\"actions-container\">\n        <button onClick={dispatch.onButtonClick}>Go to study</button>\n        <div className=\"url-container\">\n          <textarea className=\"url\" ref={urlRef}\n            defaultValue={values.share_url}></textarea>\n          <button className=\"copy\" type=\"button\" onClick={() =>\n            dispatch.onCopy(urlRef)}></button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nSuccessPage.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default SuccessPage;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n// eslint-disable-next-line no-unused-vars\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport Page1 from './studyCreationPages/Page1.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Page2 from './studyCreationPages/Page2.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Page3 from './studyCreationPages/Page3.jsx';\n// eslint-disable-next-line no-unused-vars\nimport SuccessPage from './studyCreationPages/SuccessPage.jsx';\n\nconst StudyCreationContainer = ({currentPage,\n  page1Values, page1Errors, page1Dispatch,\n  page2Values, page2Errors, page2Dispatch,\n  page3Values, page3Errors, page3Dispatch,\n  page4Values, page4Dispatch}) => {\n  let render;\n  if (currentPage === 1) {\n    render = <Page1 values={page1Values} errors={page1Errors}\n      dispatch={page1Dispatch}/>;\n  } else\n  if (currentPage === 2) {\n    render = <Page2 values={page2Values} errors={page2Errors}\n      dispatch={page2Dispatch}/>;\n  } else\n  if (currentPage === 3) {\n    render = <Page3 values={page3Values} errors={page3Errors}\n      dispatch={page3Dispatch}/>;\n  } else\n  if (currentPage === 4) {\n    render = <SuccessPage values={page4Values} dispatch={page4Dispatch}/>;\n  } else\n  if (currentPage === -1) {\n    render = <Redirect to='/'/>;\n  }\n  return render;\n};\n\nStudyCreationContainer.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  page1Values: PropTypes.object.isRequired,\n  page1Errors: PropTypes.object.isRequired,\n  page1Dispatch: PropTypes.object.isRequired,\n  page2Values: PropTypes.object.isRequired,\n  page2Errors: PropTypes.object.isRequired,\n  page2Dispatch: PropTypes.object.isRequired,\n  page3Values: PropTypes.object.isRequired,\n  page3Errors: PropTypes.object.isRequired,\n  page3Dispatch: PropTypes.object.isRequired,\n  page4Values: PropTypes.object.isRequired,\n  page4Dispatch: PropTypes.object.isRequired,\n};\n\nexport default StudyCreationContainer;\n\n\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_SENDING = 'IS_SENDING';\nexport const DID_INVALIDATE = 'DID_INVALIDATE';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n","/**\n * Handles the jws tokens and ensures the redirection in case of not validity.\n */\nclass Authenticator {\n  /**\n   * Gets the auth token from the cookie send by the server during\n   * the login/registration phase.\n   * @return {String} the jws auth token.\n   */\n  getToken() {\n    return this.getCookie('auth_token');\n  }\n}\n\n\nAuthenticator.prototype.getCookie = function(cname) {\n  const name = cname + '=';\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  for (let i = 0; i <ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) === ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) === 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\n\nexport default new Authenticator();\n","/**\n * Used to print messages and other debug data to the console.\n * @param {*} params\n */\nexport default function debugConsole(...args) {\n  console.log(args);\n}\n","export default 'http://83.212.97.237:8090';\n// export default 'http://127.0.0.1:5000';\n","import fetch from 'cross-fetch';\n\nimport auth from '../auth/authenticator';\nimport * as StatusEnum from '../static/StatusEnum';\nimport debugConsole from '../debug/debugConsole';\nimport api from './api';\n\nexport const LOAD_STUDIES = 'LOAD_STUDIES';\nexport const ADD_STUDY = 'ADD_STUDY';\n\n/**\n *\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action\n */\nexport function loadStudies(status, response, error) {\n  return {\n    type: LOAD_STUDIES,\n    payload: {\n      status: status,\n      studies: response,\n    },\n    error: error,\n  };\n}\n\n/**\n * Adds a study to the existing list of studies.\n * @param {StudyCard} study\n * @return {JSON} the action\n */\nexport function addStudy(study) {\n  return {\n    type: ADD_STUDY,\n    payload: {\n      study: study,\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * Fetches the studies from the server.\n * @return {func}\n */\nexport function fetchStudies() {\n  return function(dispatch) {\n    dispatch(loadStudies(StatusEnum.IS_FETCHING));\n\n    fetch(api+'/studies_endpoint', {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => {\n              response.json().then((json) => {\n                if (response.status === 401) {\n                  // Redirect\n                  setTimeout(window.location.reload(true), 1000);\n                  window.location.replace(json.location);\n                } else {\n                  dispatch(loadStudies(StatusEnum.SUCCESS, json.studies));\n                }\n              },\n              (error) => debugConsole('Error on decoding json: ', error));\n            },\n            (error) => debugConsole(error)\n        );\n  };\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyActions from './studyAction';\nimport auth from '../auth/authenticator';\nimport api from './api';\n\nexport const CHANGE_TITLE = 'CHANGE_TITLE';\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\nexport const ADD_CARD = 'ADD_CARD';\nexport const CHANGE_CARD_NAME = 'CHANGE_CARD_NAME';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const CHANGE_THANKS_MESSAGE = 'CHANGE_THANKS_MESSAGE';\nexport const CREATE_STUDY = 'CREATE_STUDY';\nexport const SHOW_PAGE = 'SHOW_PAGE';\nexport const OPEN_STUDY_PAGE = 'OPEN_STUDY_PAGE';\nexport const TOGGLE_TITLE_ERROR = 'TOGGLE_TITLE_ERROR';\nexport const TOGGLE_DESCRIPTION_ERROR = 'TOGGLE_DESCRIPTION_ERROR';\nexport const TOGGLE_CARD_ERROR = 'TOGGLE_CARD_ERROR';\nexport const TOGGLE_THANKS_ERROR = 'TOGGLE_THANKS_ERROR';\n\nexport const SEND_STUDY = 'SEND_STUDY';\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} title\n * @return {JSON} the action\n */\nexport function changeTitle(title) {\n  return {\n    type: CHANGE_TITLE,\n    payload: {\n      title: title,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeDescription(description) {\n  return {\n    type: CHANGE_DESCRIPTION,\n    payload: {\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Adds a card to the study that is going to be created.\n * @param {Number} id\n * @param {String} title\n * @param {String} description\n * @return {JSON} the action\n */\nexport function addCard(id) {\n  return {\n    type: ADD_CARD,\n    payload: {\n      id: id,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of a created card.\n * @param {Number} id\n * @param {String} name\n * @return {JSON} the action\n */\nexport function changeCardName(id, name) {\n  return {\n    type: CHANGE_CARD_NAME,\n    payload: {\n      id: id,\n      name: name,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the description of a created card.\n * @param {Number} id\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeCardDescription(id, description) {\n  return {\n    type: CHANGE_CARD_DESCRIPTION,\n    payload: {\n      id: id,\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the thanks message of the study.\n * @param {String} message\n * @return {JSON} the action\n */\nexport function changeThanksMessage(message) {\n  return {\n    type: CHANGE_THANKS_MESSAGE,\n    payload: {\n      message: message,\n    },\n    error: false,\n  };\n};\n\n/**\n * Changes the showing page.\n * @param {Number} pageNo\n * @return {JSON} the action\n */\nexport function showPage(pageNo) {\n  return {\n    type: SHOW_PAGE,\n    payload: {\n      pageNo: pageNo,\n    },\n    error: false,\n  };\n}\n\n/**\n * Toogle the error flag on the title input.\n * @param {Boolean} status\n * @return {JSON} the action.\n */\nexport function toggleTitleError(status) {\n  return {\n    type: TOGGLE_TITLE_ERROR,\n    payload: {\n      status: status,\n    },\n    error: false,\n  };\n}\n\n/**\n * Toogle the error flag on the description input.\n * @param {Boolean} status\n * @return {JSON} the action.\n */\nexport function toggleDescriptionError(status) {\n  return {\n    type: TOGGLE_DESCRIPTION_ERROR,\n    payload: {\n      status: status,\n    },\n    error: false,\n  };\n}\n\n/**\n * Toogle the error flag on the card input.\n * @param {Boolean} status\n * @return {JSON} the action.\n */\nexport function toggleCardError(status) {\n  return {\n    type: TOGGLE_CARD_ERROR,\n    payload: {\n      status: status,\n    },\n    error: false,\n  };\n}\n\n/**\n * Toogle the error flag on the thanks input.\n * @param {Boolean} status\n * @return {JSON} the action.\n */\nexport function toggleThanksError(status) {\n  return {\n    type: TOGGLE_THANKS_ERROR,\n    payload: {\n      status: status,\n    },\n    error: false,\n  };\n}\n\n/**\n * Async action for sending the created study to the server.\n * @param {*} status\n * @param {JSON} response\n * @param {*} error\n * @return {JSON} the action\n */\nexport function createStudy(status, response, error) {\n  return {\n    type: CREATE_STUDY,\n    payload: {\n      status: status,\n      study: response,\n      error: error,\n    },\n  };\n}\n\n/**\n * Redirects to the created study.\n * @return {JSON} the action\n */\nexport function openStudyPage() {\n  return {\n    type: OPEN_STUDY_PAGE,\n    payload: {\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * @param {Object} study\n * @return {func}\n */\nexport function sendStudy(study) {\n  return function(dispatch) {\n    dispatch(createStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint', {\n      method: 'POST',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n      body: JSON.stringify(study),\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(studyActions.addStudy(json.study));\n                dispatch(createStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport StudyCreation from '../components/StudyCreation.jsx';\nimport * as studyCreationAction from '../../actions/studyCreationAction';\n\n/**\n * The onChange handler.\n * @param {StoreDispatch} dispatch\n * @param {String} name the name of the element that has been changed:\n * - title\n * - description\n * @param {SyntheticEvent} event the event that has been triggered\n */\nfunction onElementChange(dispatch, name, event) {\n  try {\n    const value = event.target.value;\n    switch (name) {\n      case 'title': {\n        dispatch(studyCreationAction.toggleTitleError(false));\n        dispatch(studyCreationAction.changeTitle(value));\n        break;\n      }\n      case 'description': {\n        dispatch(studyCreationAction.toggleDescriptionError(false));\n        dispatch(studyCreationAction.changeDescription(value));\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  } catch (err) {\n    return;\n  }\n}\n\n/**\n * Constructs the state object that is going to be send.\n * @param {Object} state\n * @return {Object}\n */\nfunction constructState(state) {\n  return {\n    title: state.title,\n    description: state.description,\n    cards: state.cards,\n    message: state.thanksMessage,\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentPage: state.studyCreation.ui.currentPage,\n    page1Values: {\n      title: state.studyCreation.title,\n      description: state.studyCreation.description,\n    },\n    page1Errors: {\n      title: state.studyCreation.errorTitle,\n      description: state.studyCreation.errorDescription,\n    },\n    page2Values: {\n      cards: Object.values(state.studyCreation.cards),\n    },\n    page2Errors: {\n      cards: state.studyCreation.errorCards,\n    },\n    page3Values: {\n      message: state.studyCreation.thanksMessage,\n      study: constructState(state.studyCreation),\n    },\n    page3Errors: {\n      message: state.studyCreation.errorMessage,\n    },\n    page4Values: {\n      share_url: state.studyCreation.share_url,\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    page1Dispatch: {\n      onChange: (name, event) => {\n        onElementChange(dispatch, name, event);\n      },\n      onNext: (title, description) => {\n        // Check for errors\n        if (!title || title.length === 0) {\n          dispatch(studyCreationAction.toggleTitleError(true));\n          setTimeout(() => studyCreationAction.toggleTitleError(false),\n              5000);\n          return;\n        }\n        if (!description || description.length === 0) {\n          dispatch(studyCreationAction.toggleDescriptionError(true));\n          setTimeout(() => studyCreationAction.toggleDescriptionError(false),\n              5000);\n          return;\n        }\n        dispatch(studyCreationAction.showPage(2));\n      },\n      onPrev: () => {\n      },\n    },\n    page2Dispatch: {\n      onCreateCard: (cardContainerRef) => {\n        console.log(cardContainerRef.current.scrollHeight);\n        dispatch(studyCreationAction.addCard(Date.now()));\n        cardContainerRef.current.scrollTop +=\n          cardContainerRef.current.scrollHeight +\n          cardContainerRef.current.clientHeight;\n      },\n      onCardNameChange: (id, event) => {\n        dispatch(studyCreationAction.toggleCardError(false));\n        const name = event.target.value;\n        dispatch(studyCreationAction.changeCardName(id, name));\n      },\n      onCardDescriptionChange: (id, event) => {\n        const description = event.target.value;\n        dispatch(studyCreationAction.changeCardDescription(id, description));\n      },\n      onNext: (cards) => {\n        // Check for errors\n        if (!cards || !cards[0].name || cards[0].name.length === 0) {\n          dispatch(studyCreationAction.toggleCardError(true));\n          setTimeout(() => studyCreationAction.toggleCardError(false),\n              5000);\n          return;\n        }\n        dispatch(studyCreationAction.showPage(3));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(1));\n      },\n    },\n    page3Dispatch: {\n      onMessageChange: (e) => {\n        dispatch(studyCreationAction.toggleThanksError(false));\n        const message = e.target.value;\n        dispatch(studyCreationAction.changeThanksMessage(message));\n      },\n      onNext: (study) =>{\n        // Check for errors\n        if (!study.message || study.message.length === 0) {\n          dispatch(studyCreationAction.toggleThanksError(true));\n          setTimeout(() => studyCreationAction.toggleThanksError(false),\n              5000);\n          return;\n        }\n        dispatch(studyCreationAction.sendStudy(study));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(2));\n      },\n    },\n    page4Dispatch: {\n      onCopy: (urlRef) => {\n        urlRef.current.select();\n        document.execCommand('copy');\n      },\n      onButtonClick: () => {\n        dispatch(studyCreationAction.openStudyPage());\n      },\n    },\n  };\n};\n\nconst StudyCreationContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudyCreation);\n\nexport default StudyCreationContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport StudyCreationContainer\n  from '../elements/containers/StudyCreationContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study creation page.\n */\nconst CreateStudy = ({history}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <StudyCreationContainer history={history}/>\n    </main>);\n};\n\nexport default CreateStudy;\n","import {connect} from 'react-redux';\n\nimport CreateStudy from './CreateStudy.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    history: ownProps.history,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst CreateStudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CreateStudy);\n\nexport default CreateStudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst StudyMenu = ({selectedNo, onClicks}) => {\n  const styles = [];\n  for (let i = 0; i < 5; i++) {\n    styles[i] = '';\n  }\n  styles[selectedNo] = 'selected';\n\n  return (\n    <div className=\"study-menu\">\n      <button onClick={onClicks.participant} className={styles[0]}>\n        {L.text.participant}</button>\n      <button onClick={onClicks.cards} className={styles[1]}>\n        {L.text.cards}</button>\n      <button onClick={onClicks.categories} className={styles[2]}>\n        {L.text.categories}</button>\n      <button onClick={onClicks.similarityMatrix} className={styles[3]}>\n        {L.text.similarityMatrix}</button>\n      <button onClick={onClicks.clusters} className={styles[4]}>\n        {L.text.clusters}</button>\n    </div>);\n};\n\nStudyMenu.propsTypes = {\n  selectedNo: PropTypes.number.isRequired,\n  onClick: PropTypes.object.isRequired,\n};\n\nexport default StudyMenu;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataTable = ({headers, data}) => {\n  return (\n    <div className=\"data-container\">\n      <table>\n        <thead>\n          <tr>\n            {\n              headers.map((header) =>\n                <th key={'header'+header}>{header}</th>)\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((line, index) =>\n              <tr key={'line'+index}>\n                {\n                  line.map((item, index) => {\n                    if (item instanceof Array) {\n                      return <td key={'item'+index}><ul>{\n                        item.map((child, index) =>\n                          <li key={'child'+index}>{child}</li>)}</ul></td>;\n                    }\n                    return <td key={'item'+index}>{item}</td>;\n                  })\n                }\n              </tr>\n            )\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDataTable.propTypes = {\n  headers: PropTypes.arrayOf(String).isRequired,\n  data: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default DataTable;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst BarGraph = ({percentage, sub, total, entity, title, action}) => {\n  return (\n    <div className=\"bar-graph-container\">\n      <p>{title}</p>\n      <div className=\"graphic\">\n        <div className=\"completion\" style={{height: percentage}}>\n        </div>\n        <div className=\"index\" style={{bottom: percentage}}>\n          <p>{percentage}</p>\n        </div>\n      </div>\n      <div className=\"description\">\n        <p><span className=\"emphasized\">{sub}</span> {L.text.outOf} <span\n          className=\"emphasized\">{total}</span> {entity}</p>\n        <p>{action}</p>\n      </div>\n    </div>\n  );\n};\n\nBarGraph.propTypes = {\n  percentage: PropTypes.string.isRequired,\n  sub: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  entity: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n};\n\nexport default BarGraph;\n","// eslint-disable-next-line no-unused-vars\nimport React, {useRef} from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\nimport noParticipantsImage from '../../../icons/empty.svg';\n\nconst NoParticipants = ({shareUrl, copyUrl}) => {\n  const urlRef = useRef(null);\n  return (\n    <div className=\"no-participants-page\">\n      <h1>{L.text.noParticipantsYet}</h1>\n      <img src={noParticipantsImage} alt=\"Nothing found\"></img>\n      <div className=\"actions-container\">\n        <div className=\"url-container\">\n          <textarea className=\"url\" ref={urlRef}\n            defaultValue={shareUrl}></textarea>\n          <button className=\"copy\" type=\"button\" onClick={() =>\n            copyUrl(urlRef)}></button>\n        </div>\n      </div>\n    </div>);\n};\n\nNoParticipants.propTypes = {\n  shareUrl: PropTypes.string.isRequired,\n  copyUrl: PropTypes.func.isRequired,\n};\n\nexport default NoParticipants;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst SimilarityMatrix = ({data, selected, onHover}) => {\n  return (\n    <div className=\"similarirty-matrix\">\n      <table>\n        <tbody>\n          {data.map((line, index) => (\n            <tr key={'line'+index}>\n              {line.map((item, index2) => {\n                let style = 'color-';\n                if (item < 20) {\n                  style += 20;\n                } else\n                if (item < 40) {\n                  style += 40;\n                } else\n                if (item < 60) {\n                  style += 60;\n                } else\n                if (item < 80) {\n                  style += 80;\n                } else\n                if (item <= 100) {\n                  style += 100;\n                }\n\n                if (index2 === line.length - 1) {\n                  // Add different style to the text\n                  style = selected[index] ? 'hovered' : '';\n                }\n                return (\n                  <td key={'item'+index+','+index2}\n                    className={style} onMouseOver={() =>\n                      onHover(index, index2)}\n                    // Append the title based on the row/column label\n                    title={\n                      data[index2][data[index2].length - 1] + ' | ' +\n                      line[line.length - 1] + ' ' +\n                      L.text.wasGroupedTogetherBy + ' ' +\n                      item + '% ' + L.text.ofTheParticipants}>{item}</td>\n                );\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nSimilarityMatrix.propTypes = {\n  data: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  onHover: PropTypes.func.isRequired,\n};\n\nexport default SimilarityMatrix;\n","// eslint-disable-next-line no-unused-vars\nimport React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\n// eslint-disable-next-line no-unused-vars\nimport StudyMenu from '../components/studyPageElements/StudyMenu.jsx';\n// eslint-disable-next-line no-unused-vars\nimport DataTable from '../components/studyPageElements/DataTable.jsx';\n// eslint-disable-next-line no-unused-vars\nimport BarGraph from '../components/studyPageElements/BarGraph.jsx';\n// eslint-disable-next-line no-unused-vars\nimport NoParticipants from './studyPageElements/NoParticipants.jsx';\n// eslint-disable-next-line no-unused-vars\nimport SimilarityMatrix from './studyPageElements/SimilarityMatrix.jsx';\nimport L from '../../localization/LocalizedText';\n\n/**\n *\n */\nclass Study extends Component {\n  /**\n   *\n   */\n  componentDidMount() {\n    this.props.loadStudy();\n  }\n\n  /**\n   *\n   * @return {ReactDOM}\n   */\n  render() {\n    const {isFetching, title, isLive, launched, menuValues,\n      menuDispatch, graphValues, tableValues, shareUrl,\n      tableDispatch, noParticipants, similarityPage, copyUrl,\n      similarityMatrix, similarityHover, selectedCards} = this.props;\n\n    if (isFetching || isFetching === undefined) {\n      return <p>Loading...</p>;\n    }\n\n    if (noParticipants) {\n      return <NoParticipants shareUrl={shareUrl} copyUrl={copyUrl}/>;\n    }\n\n    return (\n      <div className=\"study-page\">\n        <span className=\"header\">\n          <h1>{title}</h1>\n          <button className=\"edit\"></button>\n        </span>\n        <span className=\"active\">\n          {\n            isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare isLive'></span>\n              <p>{L.text.active}</p>\n            </div>\n          }\n          {\n            !isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare notLive'></span>\n              <p>{L.text.inactive}</p>\n            </div>\n          }\n          <h2 className=\"date\">{L.text.launchedOn} {launched.getDate()} {\n            launched.getMonth()} {launched.getFullYear()}</h2>\n        </span>\n        <StudyMenu selectedNo={menuValues.selectedNo} onClicks=\n          {menuDispatch.onClicks}/>\n        {\n          similarityPage &&\n          <SimilarityMatrix data={similarityMatrix} onHover={similarityHover}\n            selected={selectedCards}/>\n        }\n        {\n          !similarityPage &&\n            <div className=\"content\">\n              <BarGraph percentage={graphValues.percentage}\n                sub={graphValues.sub}\n                total={graphValues.total} entity={graphValues.entity}\n                title={graphValues.title} action={graphValues.action}/>\n              <DataTable headers={tableValues.headers} data={tableValues.data}/>\n            </div>\n        }\n      </div>\n    );\n  };\n}\n\nStudy.propTypes = {\n  title: PropTypes.string,\n  isLive: PropTypes.bool,\n  launched: PropTypes.objectOf(Date),\n  menuValues: PropTypes.object.isRequired,\n  menuDispatch: PropTypes.object.isRequired,\n  graphValues: PropTypes.object.isRequired,\n  tableValues: PropTypes.object.isRequired,\n  tableDispatch: PropTypes.object.isRequired,\n};\n\nexport default Study;\n","import fetch from 'cross-fetch';\nimport * as StatusEnum from '../static/StatusEnum';\nimport auth from '../auth/authenticator';\nimport api from './api';\n\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\nexport const LOAD_STUDY = 'LOAD_STUDY';\nexport const CHANGE_HOVERED_CARDS = 'CHANGE_HOVERED_CARDS';\n\n/**\n * Changes the view that the study page is showing.\n * @param {Number} viewNo\n * @return {JSON} the action.\n */\nexport function changeView(viewNo) {\n  return {\n    type: CHANGE_VIEW,\n    payload: {\n      no: viewNo,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the selected card labels, when a percentage is selected.\n * @param {Number} card1Index\n * @param {Number} card2Index\n * @return {JSON} the action.\n */\nexport function changeHoveredCards(card1Index, card2Index) {\n  return {\n    type: CHANGE_HOVERED_CARDS,\n    payload: {\n      index1: card1Index,\n      index2: card2Index,\n    },\n    error: false,\n  };\n}\n\n/**\n * Async action for loading a study, given an id.\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action.\n */\nexport function loadStudy(status, response, error) {\n  return {\n    type: LOAD_STUDY,\n    payload: {\n      status: status,\n      study: response,\n    },\n    error: error,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * @param {String} id\n * @return {func}\n */\nexport function fetchStudy(id) {\n  return function(dispatch) {\n    dispatch(loadStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint?id='+id, {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(loadStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport Study from '../components/Study.jsx';\nimport L from '../../localization/LocalizedText';\nimport * as studyAction from '../../actions/studyPageAction';\n\n/**\n * Finds the proper header strings based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the headers for the selected item.\n */\nfunction getHeaders(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return [\n        L.text.participantNo,\n        L.text.timeTaken,\n        L.text.cardsSorted,\n        L.text.categoriesCreated,\n      ];\n    }\n    case 1: {\n      return [\n        L.text.card,\n        L.text.categoriesNo,\n        L.text.categories,\n        L.text.frequency,\n      ];\n    }\n    case 2: {\n      return [\n        L.text.category,\n        L.text.cardsNo,\n        L.text.cards,\n        L.text.frequency,\n        L.text.participants,\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n}\n\n/**\n * Finds the proper graph values based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {[]} the array containing the values for the graph element.\n */\nfunction getGraphValues(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return {\n        percentage: state.study.participants.completion,\n        sub: state.study.participants.completed,\n        total: state.study.participants.total,\n        entity: L.text.users,\n        title: L.text.completion,\n        action: L.text.completedTheStudy,\n      };\n    }\n    case 1: {\n      return {\n        percentage: state.study.cards.average,\n        sub: state.study.cards.sorted,\n        total: state.study.cards.total,\n        entity: L.text.cards,\n        title: L.text.averageSort,\n        action: L.text.wereSorterInAverage,\n      };\n    }\n    case 2: {\n      return {\n        percentage: state.study.categories.similarity,\n        sub: state.study.categories.similar,\n        total: state.study.categories.total,\n        entity: L.text.categories,\n        title: L.text.similarity,\n        action: L.text.couldBeMergedInto,\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\n/**\n * Finds the proper data based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the arrays of the data for\n * the selected item.\n */\nfunction getData(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return state.study.participants.data;\n    }\n    case 1: {\n      return state.study.cards.data;\n    }\n    case 2: {\n      return state.study.categories.data;\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.study.isFetching,\n    title: state.study.title,\n    isLive: state.study.isLive,\n    launched: state.study.launchedDate,\n    noParticipants: state.study.noParticipants,\n    similarityPage: state.study.selectedItem === 3,\n    shareUrl: state.study.shareUrl,\n    menuValues: {\n      selectedNo: state.study.selectedItem,\n    },\n    graphValues: getGraphValues(state),\n    tableValues: {\n      headers: getHeaders(state),\n      data: getData(state),\n    },\n    similarityMatrix: state.study.similarityMatrix,\n    selectedCards: state.study.selectedCards,\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadStudy: () => dispatch(studyAction.fetchStudy(ownProps.id)),\n    menuDispatch: {\n      onClicks: {\n        participant: () => {\n          dispatch(studyAction.changeView(0));\n        },\n        cards: () => {\n          dispatch(studyAction.changeView(1));\n        },\n        categories: () => {\n          dispatch(studyAction.changeView(2));\n        },\n        similarityMatrix: () => {\n          dispatch(studyAction.changeView(3));\n        },\n        clusters: () => {\n        },\n      },\n    },\n    tableDispatch: {\n\n    },\n    similarityHover: (index1, index2) => {\n      dispatch(studyAction.changeHoveredCards(index1, index2));\n    },\n    copyUrl: (urlRef) => {\n      urlRef.current.select();\n      document.execCommand('copy');\n    },\n  };\n};\n\nconst StudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Study);\n\nexport default StudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport StudyContainer from '../elements/containers/StudyContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study page.\n */\nconst StudyPage = ({history, match}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <StudyContainer id={match.params.id}/>\n    </main>);\n};\n\nexport default StudyPage;\n","import fetch from 'cross-fetch';\nimport api from './api';\nimport auth from '../auth/authenticator';\nimport * as StatusEnum from '../static/StatusEnum';\n\nexport const REQUEST_USERNAME = 'REQUEST_USERNAME';\n\n/**\n * Async action that requests the current username (based on the jws token).\n * @param {StatusEnum} status\n * @param {String} username\n * @param {Error} error\n * @return {JSON} the action.\n */\nexport function requestingUsername(status, username, error) {\n  return {\n    type: REQUEST_USERNAME,\n    payload: {\n      status: status,\n      username: username,\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * Fetches the username from the server.\n * @return {func}\n */\nexport function fetchUsername() {\n  return function(dispatch) {\n    dispatch(requestingUsername(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint?username=true', {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status !== 401) {\n                dispatch(requestingUsername(StatusEnum.SUCCESS, json.username));\n              }\n            }\n            )\n        );\n  };\n}\n","\n/**\n * Represents the data model of the study-card object, found in the main page\n */\nexport default class StudyCard {\n  /**\n   *\n   * @param {Number} id\n   * @param {String} title\n   * @param {Boolean} isLive\n   * @param {Number} completedNo\n   * @param {Number} abandonedNo\n   * @param {Date} launchedDate\n   * @param {Date} editDate\n   * @param {Date} endDate\n   */\n  constructor(id, title, isLive, completedNo, abandonedNo,\n      launchedDate, editDate, endDate) {\n    this.id = id;\n    this.title = title;\n    this.isLive = isLive;\n    this.completedNo = completedNo;\n    this.abandonedNo = abandonedNo;\n    this.launchedDate = launchedDate;\n    this.editDate = editDate;\n    this.endDate = endDate;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport headerReducer from './headerReducer';\nimport studyReducer from './studyReducer';\nimport studyCreationReducer from './studyCreationReducer';\nimport studyPageReducer from './studyPageReducer';\n\nconst app = combineReducers({\n  header: headerReducer,\n  studies: studyReducer,\n  studyCreation: studyCreationReducer,\n  study: studyPageReducer,\n});\n\nexport default app;\n","import * as headerActions from '../actions/headerAction';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {headerState} state\n * @param {headerActions} action\n * @return {headerState}\n */\nexport default function headerReducer(state={}, action) {\n  switch (action.type) {\n    case headerActions.REQUEST_USERNAME: {\n      return Object.assign({}, state, {\n        'username': (action.payload.status === StatusEnum.SUCCESS) ?\n                    action.payload.username : '',\n      });\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyAction';\nimport StudyCard from '../elements/StudyCard';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDIES: {\n      const newState = Object.assign({}, state);\n\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        if (!action.payload.studies || action.payload.studies.length === 0) {\n          newState.studies = [];\n        } else {\n          newState.studies = action.payload.studies.map(\n              ({id, title, isLive, completedNo, abandonedNo,\n                launchedDate, editDate, endDate}) => new StudyCard(\n                  id, title, isLive, completedNo, abandonedNo,\n                  new Date(launchedDate),\n                  new Date(editDate),\n                  !isLive? new Date(endDate) : undefined\n              )\n          );\n        };\n      }\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.ADD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n\n      newState.studies.push(new StudyCard(\n          study.id, study.title, study.isLive, study.completedNo,\n          study.abandonedNo,\n          new Date(study.launchedDate),\n          new Date(study.editDate),\n          undefined));\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyCreationActions from '../actions/studyCreationAction';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyCreationReducer(state={}, action) {\n  switch (action.type) {\n    case studyCreationActions.CHANGE_TITLE: {\n      return Object.assign({}, state, {\n        'title': action.payload.title,\n      });\n    }\n    case studyCreationActions.CHANGE_DESCRIPTION: {\n      return Object.assign({}, state, {\n        'description': action.payload.description,\n      });\n    }\n    case studyCreationActions.ADD_CARD: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id] = {\n        id: action.payload.id,\n        title: undefined,\n        description: undefined,\n      };\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_NAME: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].name =\n        action.payload.name;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_DESCRIPTION: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].description =\n        action.payload.description;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_THANKS_MESSAGE: {\n      return Object.assign({}, state, {\n        'thanksMessage': action.payload.message,\n      });\n    }\n    case studyCreationActions.TOGGLE_TITLE_ERROR: {\n      return Object.assign({}, state, {\n        'errorTitle': action.payload.status,\n      });\n    }\n    case studyCreationActions.TOGGLE_DESCRIPTION_ERROR: {\n      return Object.assign({}, state, {\n        'errorDescription': action.payload.status,\n      });\n    }\n    case studyCreationActions.TOGGLE_CARD_ERROR: {\n      return Object.assign({}, state, {\n        'errorCards': action.payload.status,\n      });\n    }\n    case studyCreationActions.TOGGLE_THANKS_ERROR: {\n      return Object.assign({}, state, {\n        'errorMessage': action.payload.status,\n      });\n    }\n    case studyCreationActions.SHOW_PAGE: {\n      const newState = Object.assign({}, state);\n      newState['ui'].currentPage = action.payload.pageNo;\n      return newState;\n    }\n    case studyCreationActions.OPEN_STUDY_PAGE: {\n      window.location.assign(state.url_to_study);\n      return state;\n    }\n    case studyCreationActions.CREATE_STUDY: {\n      const newState = Object.assign({}, state);\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.url_to_study = action.payload.study.url_to_study;\n        newState.share_url = action.payload.study.share_url;\n        newState.ui.currentPage = 4;\n      }\n      newState.ui.studySending = action.payload.status;\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyPageAction';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {stateSchema} state\n * @param {studyPageAction} action\n * @return {stateSchema}\n */\nexport default function studyPageReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.id = study.id;\n        newState.title = study.title;\n        newState.isLive = study.isLive;\n        newState.launchedDate = new Date(study.launchedDate);\n        newState.ended = study.ended ? new Date(study.ended): undefined;\n        newState.noParticipants = study.participants === 0 ? true : false;\n        newState.shareUrl = study.shareUrl;\n        newState.participants = {\n          completion: study.participants ? study.participants.completion: '0%',\n          total: study.participants ? study.participants.total: 0,\n          completed: study.participants ? study.participants.completed: 0,\n          data: study.participants ? study.participants.data: [],\n        };\n        newState.cards = {\n          average: study.cards ? study.cards.average: '0%',\n          total: study.cards ? study.cards.total: 0,\n          sorted: study.cards ? study.cards.sorted: 0,\n          data: study.cards ? study.cards.data: [],\n        };\n        newState.categories = {\n          similarity: study.categories ? study.categories.similarity: '0%',\n          total: study.categories ? study.categories.total: 0,\n          similar: study.categories ? study.categories.similar: 0,\n          merged: study.categories ? study.categories.merged: 0,\n          data: study.categories ? study.categories.data: [],\n        };\n        newState.similarityMatrix = study.similarityMatrix;\n      }\n\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.CHANGE_VIEW: {\n      return Object.assign({}, state, {\n        'selectedItem': action.payload.no,\n      });\n    }\n    case studyActions.CHANGE_HOVERED_CARDS: {\n      const selectedCards = [];\n      for (let i = 0; i < state.similarityMatrix.length; i++) {\n        selectedCards.push(\n            i === action.payload.index1 ||\n            i === action.payload.index2\n        );\n      }\n      return Object.assign({}, state, {\n        'selectedCards': selectedCards,\n      });\n    }\n    default: {\n      return state;\n    }\n  };\n}\n","const initialState = {\n  header: {\n    username: undefined,\n    profilePic: '../icons/sample-user.svg',\n  },\n  studies: {\n    isFetching: undefined,\n    didInvalidate: undefined,\n    studies: [],\n  },\n  studyCreation: {\n    title: undefined,\n    description: undefined,\n    url_to_study: undefined,\n    share_url: undefined,\n    errorTitle: false,\n    errorDescription: false,\n    errorCards: false,\n    errorMessage: false,\n    cards: {\n      1: {\n        id: 1,\n        name: undefined,\n        description: undefined,\n      },\n    },\n    thanksMessage: undefined,\n    ui: {\n      currentPage: 1,\n      titleFetching: undefined,\n      validTitle: true,\n      studySending: undefined,\n    },\n  },\n  study: {\n    isFetching: undefined,\n    id: undefined,\n    title: undefined,\n    isLive: undefined,\n    launchedDate: undefined,\n    ended: undefined,\n    selectedItem: 0,\n    noParticipants: true,\n    shareUrl: undefined,\n    participants: {\n      completion: undefined,\n      total: undefined,\n      completed: undefined,\n      data: [],\n    },\n    cards: {\n      average: undefined,\n      total: undefined,\n      sorted: undefined,\n      data: [],\n    },\n    categories: {\n      similarity: undefined,\n      total: undefined,\n      similar: undefined,\n      merged: undefined,\n      data: [],\n    },\n    similarityMatrix: undefined,\n    selectedCards: [],\n  },\n};\n\nexport default initialState;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport ReactDOM from 'react-dom';\n// eslint-disable-next-line no-unused-vars\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\n// eslint-disable-next-line no-unused-vars\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport Main from './pages/Main.jsx';\nimport CreateStudy from './pages/CreateStudyContainer.jsx';\nimport StudyPage from './pages/StudyPage.jsx';\nimport initializeStore from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = initializeStore();\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Route exact path='/' component={Main}/>\n        <Route path='/create' component={CreateStudy}/>\n        <Route path={`${process.env.PUBLIC_URL}/study/:id`}\n          component={StudyPage}/>\n      </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n// import logger from 'redux-logger';\n\nimport app from './reducers/indexReducer';\nimport initialState from './reducers/stateSchema';\nimport localizedText from './localization/LocalizedText';\n\nimport {fetchStudies} from './actions/studyAction';\nimport {fetchUsername} from './actions/headerAction';\n\n/**\n * @return {Store}\n */\nexport default function initializeStore() {\n  const store = createStore(app, initialState, applyMiddleware(\n      thunkMiddleware,\n      // logger\n  ));\n\n  localizedText.initialize('en-us');\n\n  const unsuscribe = store.subscribe(() => {});\n\n  store.dispatch(fetchUsername());\n  store.dispatch(fetchStudies());\n\n\n  unsuscribe();\n  return store;\n}\n"],"sourceRoot":""}