{"version":3,"sources":["demo/profile.jpeg","icons/plus.svg","elements/components/Header.jsx","elements/containers/HeaderContainer.jsx","localization/en-us.js","localization/LocalizedText.js","elements/components/StudyItem.jsx","elements/components/CreateStudyItem.jsx","elements/components/StudiesContainer.jsx","elements/containers/PopulateStudiesContainer.jsx","elements/components/Filters.jsx","pages/Main.jsx","elements/components/studyCreationPages/Page1.jsx","elements/components/studyCreationPages/Card.jsx","elements/components/studyCreationPages/Page2.jsx","elements/components/studyCreationPages/Page3.jsx","elements/components/StudyCreationContainer.jsx","static/StatusEnum.js","auth/authenticator.js","debug/debugConsole.js","actions/api.js","actions/studyAction.js","actions/studyCreationAction.js","elements/containers/PopulateCreateStudyContainer.jsx","pages/CreateStudy.jsx","pages/CreateStudyContainer.jsx","elements/components/studyPageElements/StudyMenu.jsx","elements/components/studyPageElements/DataTable.jsx","elements/components/studyPageElements/BarGraph.jsx","elements/components/Study.jsx","actions/studyPageAction.js","elements/containers/StudyContainer.jsx","pages/StudyPage.jsx","elements/StudyCard.js","reducers/indexReducer.js","reducers/headerReducer.js","reducers/studyReducer.js","reducers/studyCreationReducer.js","reducers/studyPageReducer.js","reducers/stateSchema.js","serviceWorker.js","index.js","Store.js"],"names":["module","exports","__webpack_require__","p","Header","_ref","username","profilePic","react_default","a","createElement","href","id","className","src","alt","HeaderContainer","connect","state","dispatch","en_us","abandonded","active","addCard","basicInformation","card","cardName","cards","cardsNo","cardsSorted","categories","categoriesCreated","categoriesNo","category","clusters","completed","completedTheStudy","completion","couldBeMergedInto","create","createStudy","description","editedOn","endedOn","filter","frequency","inactive","launchedOn","message","of","ongoing","outOf","participant","participantNo","participants","similarityMatrix","studies","thanksMessage","timeTaken","title","users","wereSorterInAverage","localization_LocalizedText","locale","this","text","enUS","StudyItem","isLive","completedNo","abandonedNo","launchedDate","editDate","endDate","onClick","localizedText","dateTime","getDate","getMonth","getFullYear","CreateStudyItem","plusSign","StudiesContainer","onStudyClick","onCreateClick","map","Study","index","components_StudyItem","key","components_CreateStudyItem","PopulateStudiesContainer","ownProps","history","push","Filters","ongoingRef","completedRef","ongoingStyle","completedStyle","Main","containers_HeaderContainer","demoImage","components_Filters","containers_PopulateStudiesContainer","Page1","values","type","placeholder","onChange","e","rows","cols","url","onPrev","onNext","Card","name","onNameChange","onDescriptionChange","Page2","studyCreationPages_Card","onCardNameChange","onCardDescriptionChange","onCreateCard","Page3","onMessageChange","study","StudyCreationContainer","render","currentPage","page1Values","page1Dispatch","page2Values","page2Dispatch","page3Values","page3Dispatch","studyCreationPages_Page1","studyCreationPages_Page2","studyCreationPages_Page3","react_router","to","IS_FETCHING","SUCCESS","Authenticator","getCookie","prototype","cname","ca","decodeURIComponent","document","cookie","split","i","length","c","charAt","substring","indexOf","authenticator","debugConsole","_len","arguments","args","Array","_key","console","log","api","LOAD_STUDIES","ADD_STUDY","loadStudies","status","response","error","payload","CHANGE_TITLE","CHANGE_DESCRIPTION","CHANGE_URL","ADD_CARD","CHANGE_CARD_NAME","CHANGE_CARD_DESCRIPTION","CHANGE_THANKS_MESSAGE","CREATE_STUDY","SHOW_PAGE","CHECK_TITLE","changeURL","showPage","pageNo","reponse","sendStudy","StatusEnum","fetch","method","withCredentials","credentials","headers","Content-Type","Authorization","auth","getToken","Access-Control-Allow-Credentials","body","JSON","stringify","then","json","setTimeout","window","location","reload","replace","onElementChange","event","value","target","studyCreationAction","err","constructState","PopulateCreateStudyContainer","studyCreation","ui","titleValidity","validTitle","urlPrefix","Object","Date","now","CreateStudy","containers_PopulateCreateStudyContainer","CreateStudyContainer","StudyMenu","selectedNo","onClicks","styles","L","propsTypes","PropTypes","number","isRequired","object","DataTable","data","header","line","item","BarGraph","percentage","sub","total","entity","action","style","height","bottom","props","loadStudy","_this$props","isFetching","launched","menuValues","menuDispatch","graphValues","tableValues","tableDispatch","undefined","studyPageElements_StudyMenu","studyPageElements_BarGraph","studyPageElements_DataTable","Component","CHANGE_VIEW","LOAD_STUDY","changeView","viewNo","no","getHeaders","selectedItem","getGraphValues","average","sorted","similarity","similar","getData","StudyContainer","studyAction","StudyPage","match","containers_StudyContainer","params","StudyCard","classCallCheck","app","combineReducers","studyActions","newState","assign","studyCreationActions","titleFetching","studySending","ended","sort","merged","initialState","didInvalidate","1","Boolean","hostname","store","createStore","applyMiddleware","thunkMiddleware","logger","initialize","unsuscribe","subscribe","initializeStore","ReactDOM","es","react_router_dom","exact","path","component","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdf982d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile.ed50a564.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/plus.648c7e93.svg\";","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({username, profilePic}) => (\n  <header>\n    <a href=\"/\" id=\"logo\">Card Sorter</a>\n    <div className=\"profile\">\n      <p>{username}</p>\n      <img src={profilePic} alt='Profile' />\n    </div>\n  </header>\n);\n\nHeader.propTypes = {\n  username: PropTypes.string.isRequired,\n  profilePic: PropTypes.string.isRequired,\n};\n\n\nexport default Header;\n","import {connect} from 'react-redux';\n\nimport Header from '../components/Header.jsx';\n\nconst mapStateToProps = (state) => {\n  return {\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst HeaderContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Header);\n\nexport default HeaderContainer;\n","export default {\n  abandonded: 'Abandoned',\n  active: 'Active',\n  addCard: 'Add Card',\n  basicInformation: 'Basic Information',\n  card: 'card',\n  cardName: 'Card name',\n  cards: 'cards',\n  cardsNo: 'cards no',\n  cardsSorted: 'cards sorted',\n  categories: 'categories',\n  categoriesCreated: 'categories created',\n  categoriesNo: 'categoriesNo',\n  category: 'category',\n  clusters: 'clusters',\n  completed: 'Completed',\n  completedTheStudy: 'completed the study',\n  completion: 'completion',\n  couldBeMergedInto: 'could be merged into',\n  create: 'Create',\n  createStudy: 'Create a new study',\n  description: 'Description',\n  editedOn: 'Last edited on',\n  endedOn: 'Ended on',\n  filter: 'FILTER',\n  frequency: 'frequency',\n  inactive: 'Inactive',\n  launchedOn: 'Launched on',\n  message: 'Message',\n  of: 'of',\n  ongoing: 'ongoing',\n  outOf: 'out of',\n  participant: 'participant',\n  participantNo: 'participant no',\n  participants: 'participants',\n  similarityMatrix: 'similarity matrix',\n  studies: 'STUDIES',\n  thanksMessage: 'Thanks message',\n  timeTaken: 'time taken',\n  title: 'Title',\n  users: 'users',\n  wereSorterInAverage: 'were sorter in average',\n};\n\n","import enUS from './en-us';\n\n/**\n * Holds the proper localized text for usage in the UI.\n */\nclass LocalizedText {\n  /**\n   *\n   * @param {String} locale supported locales:\n   * - 'en-us' : English - United States\n   */\n  initialize(locale) {\n    switch (locale) {\n      default: {\n        this.text = enUS;\n      }\n    }\n  }\n};\n\nexport default new LocalizedText();\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst StudyItem = ({title, isLive, completedNo, abandonedNo,\n  launchedDate, editDate, endDate, onClick}) => (\n  <li className='studyItem' onClick={onClick}>\n    <div className='header'>\n      <h3>{title}</h3>\n      {\n        isLive &&\n        <span className='activeSquare isLive'></span>\n      }\n      {\n        !isLive &&\n        <span className='activeSquare notLive'></span>\n\n      }\n    </div>\n    <div className='participants'>\n      <p className='completed'>{completedNo} {localizedText.text.completed}</p>\n      <p className='abandoned'>{abandonedNo} {localizedText.text.abandonded}</p>\n    </div>\n    <div className='dates'>\n      <p className='launched'>\n        {localizedText.text.launchedOn} <time\n          dateTime={launchedDate}>{launchedDate.getDate()} {launchedDate.getMonth()} {launchedDate.getFullYear()}</time>\n      </p>\n      {/* If the endDate is defined show only the end and the launched date */}\n      {\n        !endDate &&\n        <p className='edited'>\n          {localizedText.text.editedOn} <time\n            dateTime={editDate}>{editDate.getDate()} {editDate.getMonth()} {editDate.getFullYear()}</time>\n        </p>\n      }\n      {\n        endDate &&\n        <p className='ended'>\n          {localizedText.text.endedOn} <time\n            dateTime={endDate}>{endDate.getDate()} {endDate.getMonth()} {endDate.getFullYear()}</time>\n        </p>\n      }\n    </div>\n  </li>\n);\n\nStudyItem.propTypes = {\n  title: PropTypes.string.isRequired,\n  isLive: PropTypes.bool.isRequired,\n  completedNo: PropTypes.number.isRequired,\n  abandonedNo: PropTypes.number.isRequired,\n  launchedDate: PropTypes.instanceOf(Date).isRequired,\n  editDate: PropTypes.instanceOf(Date),\n  endDate: PropTypes.instanceOf(Date),\n  onClick: PropTypes.func.isRequired,\n};\n\nexport default StudyItem;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport plusSign from '../../icons/plus.svg';\n\nconst CreateStudyItem = ({onClick}) => (\n  <button className=\"createStudyCard\" onClick={onClick}>\n    <img src={plusSign} alt='Plus sign'/>\n    <p>Create a study</p>\n  </button>\n);\n\nCreateStudyItem.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default CreateStudyItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport StudyItem from './StudyItem.jsx';\nimport CreateStudyItem from './CreateStudyItem.jsx';\n\nconst StudiesContainer = ({studies, onStudyClick, onCreateClick}) => (\n  <ul className=\"studies-container\">\n    {\n      studies.map((Study, index) =>\n        <StudyItem key={'studyItem'+index} title={Study.title} isLive={Study.isLive}\n          completedNo={Study.completedNo} abandonedNo={Study.abandonedNo}\n          launchedDate={Study.launchedDate} editDate={Study.editDate}\n          endDate={Study.endDate} onClick={() => onStudyClick(Study.id)}/>)\n    }\n    <CreateStudyItem onClick={onCreateClick}/>\n  </ul>\n);\n\nStudiesContainer.propTypes = {\n  studies: PropTypes.array.isRequired,\n  onCreateClick: PropTypes.func.isRequired,\n};\n\nexport default StudiesContainer;\n","import {connect} from 'react-redux';\n\nimport StudiesContainer from '../components/StudiesContainer.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    studies: state.studies.studies,\n    onStudyClick: (id) => {\n      ownProps.history.push('./study/'+id);\n    },\n    onCreateClick: () => {\n      ownProps.history.push('./create');\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst PopulateStudiesContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudiesContainer);\n\nexport default PopulateStudiesContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../localization/LocalizedText';\n\nconst Filters = ({ongoing: ongoingAttr, completed: completedAttr}) => {\n  let ongoingRef = './?filter=all';\n  let completedRef = './?filter=all';\n  let ongoingStyle = '';\n  let completedStyle = '';\n\n  if (ongoingAttr) {\n    ongoingRef = './?filter=completed';\n    ongoingStyle = 'active';\n  }\n  if (completedAttr) {\n    completedRef = './?filter=ongoing';\n    completedStyle = 'active';\n  }\n\n  return (\n    <div className=\"filter-container\">\n      <p>{localizedText.text.filter}</p>\n      <a href={ongoingRef} className={ongoingStyle}>{localizedText.text.ongoing}</a>\n      <a href={completedRef} className={completedStyle}>{localizedText.text.completed}</a>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  ongoing: PropTypes.bool.isRequired,\n  completed: PropTypes.bool.isRequired,\n};\n\nexport default Filters;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\nimport '../App.css';\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport PopulateStudiesContainer \n  from '../elements/containers/PopulateStudiesContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport Filters from '../elements/components/Filters.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n\n/**\n * The main page.\n * @return {ReactDOM}\n */\nconst Main = ({history}) =>\n  (<main>\n    <Header username='John' profilePic={demoImage}/>\n    <Filters ongoing={true} completed={true} />\n    <PopulateStudiesContainer history={history}/>\n  </main>);\n\nexport default Main;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Page1 = ({values, dispatch}) => (\n  <div className='study-creation-card'>\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.basicInformation}</h2>\n\n    <form>\n      <input type='text' placeholder={values.title ||\n        localizedText.text.title} onChange={(e)=>\n        dispatch.onChange('title', e)}></input>\n\n      <textarea placeholder={values.description ||\n        localizedText.text.description} rows='10' cols='30' onChange={(e)=>\n        dispatch.onChange('description', e)}></textarea>\n\n      <div className=\"url-container\">\n        <p className=\"url-small\">{values.url}</p>\n        <input type='text' placeholder={values.title ||\n          localizedText.text.title} onChange={(e)=>\n          dispatch.onChange('url', e)}></input>\n        <button className=\"copy\" type=\"button\"></button>\n      </div>\n\n    </form>\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev disabled\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"next\" onClick={dispatch.onNext}></button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>1</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage1.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page1;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Card = ({name, description, onNameChange, onDescriptionChange}) => (\n  <div className=\"card\">\n    <input type=\"text\" placeholder={name ||\n      localizedText.text.cardName} onChange={(e) => onNameChange(e)}></input>\n    <input type=\"text\" placeholder={description ||\n      localizedText.text.description} onChange={(e) => onDescriptionChange(e)}></input>\n  </div>\n);\n\nCard.propTypes = {\n  name: PropTypes.string,\n  description: PropTypes.string,\n  onNameChange: PropTypes.func.isRequired,\n  onDescriptionChange: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\nimport Card from './Card.jsx';\n\nconst Page2 = ({values, dispatch}) => (\n  <div className=\"study-creation-card\">\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.cards}</h2>\n\n    <form className=\"cards\">\n      <div className=\"card-container\">\n        {\n          values.cards.map((card) => (\n            <Card key={'card'+card.id} name={card.name}\n              description={card.description} onNameChange={(e) =>\n                dispatch.onCardNameChange(card.id, e)}\n              onDescriptionChange={(e) =>\n                dispatch.onCardDescriptionChange(card.id, e)}/>\n          ))\n        }\n      </div>\n      <button type=\"button\" onClick={dispatch.onCreateCard}>\n        {localizedText.text.addCard}</button>\n    </form>\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"next\" onClick={dispatch.onNext}></button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>2</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage2.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page2;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport localizedText from '../../../localization/LocalizedText';\n\nconst Page3 = ({values, dispatch}) => (\n  <div className=\"study-creation-card\">\n    <h1>{localizedText.text.createStudy}</h1>\n    <h2>{localizedText.text.message}</h2>\n\n    <form>\n      <textarea className=\"thanks message\" cols=\"30\" rows=\"10\"\n        onChange={(e) => dispatch.onMessageChange(e)}\n        placeholder={values.message || localizedText.text.thanksMessage}>\n      </textarea>\n      <div className=\"url-container\">\n        <p className=\"url\">{values.url}</p>\n        <button className=\"copy\" type=\"button\"></button>\n      </div>\n    </form>\n\n    <div className=\"bottom-container\">\n      <div className=\"btn-container\">\n        <button className=\"prev\"\n          onClick={dispatch.onPrev}></button>\n        <button className=\"create\" onClick={() =>\n          dispatch.onNext(values.study)}>\n          {localizedText.text.create}</button>\n      </div>\n      <div className=\"page-no-container\">\n        <p>3</p>\n        <p>{localizedText.text.of}</p>\n        <p>3</p>\n      </div>\n    </div>\n  </div>\n);\n\nPage3.propTypes = {\n  values: PropTypes.object.isRequired,\n  dispatch: PropTypes.object.isRequired,\n};\n\nexport default Page3;\n","import React from 'react';\nimport {Redirect} from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport Page1 from './studyCreationPages/Page1.jsx';\nimport Page2 from './studyCreationPages/Page2.jsx';\nimport Page3 from './studyCreationPages/Page3.jsx';\n\nconst StudyCreationContainer = ({currentPage, page1Values, page1Dispatch,\n  page2Values, page2Dispatch, page3Values, page3Dispatch}) => {\n  let render;\n  if (currentPage === 1) {\n    render = <Page1 values={page1Values} dispatch={page1Dispatch} />;\n  } else\n  if (currentPage === 2) {\n    render = <Page2 values={page2Values} dispatch={page2Dispatch} />;\n  } else\n  if (currentPage === 3) {\n    render = <Page3 values={page3Values} dispatch={page3Dispatch} />;\n  } else\n  if (currentPage === -1) {\n    render = <Redirect to='/'/>;\n  }\n  return render;\n};\n\nStudyCreationContainer.propTypes = {\n  currentPage: PropTypes.number.isRequired,\n  page1Values: PropTypes.object.isRequired,\n  page1Dispatch: PropTypes.object.isRequired,\n  page2Values: PropTypes.object.isRequired,\n  page2Dispatch: PropTypes.object.isRequired,\n  page3Values: PropTypes.object.isRequired,\n  page3Dispatch: PropTypes.object.isRequired,\n};\n\nexport default StudyCreationContainer;\n\n\n","export const IS_FETCHING = 'IS_FETCHING';\nexport const IS_SENDING = 'IS_SENDING';\nexport const DID_INVALIDATE = 'DID_INVALIDATE';\nexport const SUCCESS = 'SUCCESS';\nexport const FAILURE = 'FAILURE';\n","/**\n * Handles the jws tokens and ensures the redirection in case of not validity.\n */\nclass Authenticator {\n  /**\n   * Gets the auth token from the cookie send by the server during\n   * the login/registration phase.\n   * @return {String} the jws auth token.\n   */\n  getToken() {\n    return this.getCookie('auth_token');\n  }\n}\n\n\nAuthenticator.prototype.getCookie = function(cname) {\n  const name = cname + '=';\n  const decodedCookie = decodeURIComponent(document.cookie);\n  const ca = decodedCookie.split(';');\n  for (let i = 0; i <ca.length; i++) {\n    let c = ca[i];\n    while (c.charAt(0) == ' ') {\n      c = c.substring(1);\n    }\n    if (c.indexOf(name) == 0) {\n      return c.substring(name.length, c.length);\n    }\n  }\n  return '';\n};\n\nexport default new Authenticator();\n","/**\n * Used to print messages and other debug data to the console.\n * @param {*} params\n */\nexport default function debugConsole(...args) {\n  console.log(args);\n}\n","export default 'http://83.212.97.237:8090';\n// export default 'http://127.0.0.1:5000';\n","import fetch from 'cross-fetch';\n\nimport auth from '../auth/authenticator';\nimport * as StatusEnum from '../static/StatusEnum';\nimport debugConsole from '../debug/debugConsole';\nimport api from './api';\n\nexport const LOAD_STUDIES = 'LOAD_STUDIES';\nexport const ADD_STUDY = 'ADD_STUDY';\n\n/**\n *\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action\n */\nexport function loadStudies(status, response, error) {\n  return {\n    type: LOAD_STUDIES,\n    payload: {\n      status: status,\n      studies: response,\n    },\n    error: error,\n  };\n}\n\n/**\n * Adds a study to the existing list of studies.\n * @param {StudyCard} study\n * @return {JSON} the action\n */\nexport function addStudy(study) {\n  return {\n    type: ADD_STUDY,\n    payload: {\n      study: study,\n    },\n    error: false,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * Fetches the studies from the server.\n * @return {func}\n */\nexport function fetchStudies() {\n  return function(dispatch) {\n    dispatch(loadStudies(StatusEnum.IS_FETCHING));\n\n    fetch(api+'/studies_endpoint', {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => {\n              response.json().then((json) => {\n                if (response.status === 401) {\n                  // Redirect\n                  setTimeout(window.location.reload(true), 1000);\n                  window.location.replace(json.location);\n                } else {\n                  dispatch(loadStudies(StatusEnum.SUCCESS, json.studies));\n                }\n              },\n              (error) => debugConsole('Error on decoding json: ', error));\n            },\n            (error) => debugConsole(error)\n        );\n  };\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyActions from './studyAction';\nimport auth from '../auth/authenticator';\nimport api from './api';\n\nexport const CHANGE_TITLE = 'CHANGE_TITLE';\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\nexport const CHANGE_URL = 'CHANGE_URL';\nexport const ADD_CARD = 'ADD_CARD';\nexport const CHANGE_CARD_NAME = 'CHANGE_CARD_NAME';\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\nexport const CHANGE_THANKS_MESSAGE = 'CHANGE_THANKS_MESSAGE';\nexport const CREATE_STUDY = 'CREATE_STUDY';\nexport const SHOW_PAGE = 'SHOW_PAGE';\n\nexport const CHECK_TITLE = 'CHECK_TITLE';\nexport const SEND_STUDY = 'SEND_STUDY';\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} title\n * @return {JSON} the action\n */\nexport function changeTitle(title) {\n  return {\n    type: CHANGE_TITLE,\n    payload: {\n      title: title,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of the study that is going to be created.\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeDescription(description) {\n  return {\n    type: CHANGE_DESCRIPTION,\n    payload: {\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the url of the study that is going to be created.\n * @param {String} url\n * @return {JSON} the action\n */\nexport function changeURL(url) {\n  return {\n    type: CHANGE_URL,\n    payload: {\n      url: url,\n    },\n    error: false,\n  };\n}\n\n/**\n * Adds a card to the study that is going to be created.\n * @param {Number} id\n * @param {String} title\n * @param {String} description\n * @return {JSON} the action\n */\nexport function addCard(id) {\n  return {\n    type: ADD_CARD,\n    payload: {\n      id: id,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the title of a created card.\n * @param {Number} id\n * @param {String} name\n * @return {JSON} the action\n */\nexport function changeCardName(id, name) {\n  return {\n    type: CHANGE_CARD_NAME,\n    payload: {\n      id: id,\n      name: name,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the description of a created card.\n * @param {Number} id\n * @param {String} description\n * @return {JSON} the action\n */\nexport function changeCardDescription(id, description) {\n  return {\n    type: CHANGE_CARD_DESCRIPTION,\n    payload: {\n      id: id,\n      description: description,\n    },\n    error: false,\n  };\n}\n\n/**\n * Changes the thanks message of the study.\n * @param {String} message\n * @return {JSON} the action\n */\nexport function changeThanksMessage(message) {\n  return {\n    type: CHANGE_THANKS_MESSAGE,\n    payload: {\n      message: message,\n    },\n    error: false,\n  };\n};\n\n/**\n * Changes the showing page.\n * @param {Number} pageNo\n * @return {JSON} the action\n */\nexport function showPage(pageNo) {\n  return {\n    type: SHOW_PAGE,\n    payload: {\n      pageNo: pageNo,\n    },\n    error: false,\n  };\n}\n\n\n/**\n * Async action for checking the validity of the title.\n * @param {StatusEnum} status\n * @param {Boolean} validTitle\n * @param {Error} error\n * @return {JSON} the action\n */\nexport function checkTitle(status, validTitle, error) {\n  return {\n    type: CHECK_TITLE,\n    payload: {\n      status: status,\n      payload: {\n        validTitle: validTitle,\n      },\n    },\n    error: error,\n  };\n}\n\n/**\n * Async action for sending the created study to the server.\n * @param {*} status\n * @param {JSON} response\n * @param {*} error\n * @return {JSON} the action\n */\nexport function createStudy(status, response, error) {\n  return {\n    type: CREATE_STUDY,\n    payload: {\n      status: status,\n      reponse: response,\n      error: error,\n    },\n  };\n}\n\n/* Thunk actions */\n\n/**\n *\n * @param {*} title\n * @return {func}\n */\nexport function sendTitle(title) {\n  return function(dispatch) {\n    dispatch(checkTitle(StatusEnum.IS_FETCHING));\n    fetch('http://127.0.0.1:5000/studies_endpoint?title', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        title: title,\n      }),\n    })\n        .then(\n            (response) => response.json().then((json) =>\n              dispatch(checkTitle(StatusEnum.SUCCESS, json.isValid))\n            )\n        );\n  };\n}\n\n/**\n * @param {Object} study\n * @return {func}\n */\nexport function sendStudy(study) {\n  return function(dispatch) {\n    dispatch(createStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint', {\n      method: 'POST',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n      body: JSON.stringify(study),\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(studyActions.addStudy(json.study));\n                dispatch(createStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport StudyCreationContainer from '../components/StudyCreationContainer.jsx';\nimport * as studyCreationAction from '../../actions/studyCreationAction';\n\n/**\n * The onChange handler.\n * @param {StoreDispatch} dispatch\n * @param {String} name the name of the element that has been changed:\n * - title\n * - description\n * - url\n * @param {SyntheticEvent} event the event that has been triggered\n */\nfunction onElementChange(dispatch, name, event) {\n  try {\n    const value = event.target.value;\n    switch (name) {\n      case 'title': {\n        dispatch(studyCreationAction.changeTitle(value));\n        dispatch(studyCreationAction.changeURL(value));\n        break;\n      }\n      case 'description': {\n        dispatch(studyCreationAction.changeDescription(value));\n        break;\n      }\n      case 'url': {\n        dispatch(studyCreationAction.changeURL(value));\n        break;\n      }\n      default: {\n        break;\n      }\n    }\n  } catch (err) {\n    return;\n  }\n}\n\n/**\n * Constructs the state object that is going to be send.\n * @param {Object} state\n * @return {Object}\n */\nfunction constructState(state) {\n  return {\n    title: state.title,\n    description: state.description,\n    url: state.url,\n    cards: state.cards,\n    message: state.thanksMessage,\n  };\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    currentPage: state.studyCreation.ui.currentPage,\n    page1Values: {\n      title: state.studyCreation.title,\n      titleValidity: state.studyCreation.ui.validTitle,\n      url: state.studyCreation.urlPrefix,\n    },\n    page2Values: {\n      cards: Object.values(state.studyCreation.cards),\n    },\n    page3Values: {\n      message: state.studyCreation.thanksMessage,\n      url: state.studyCreation.urlPrefix + state.studyCreation.url,\n      study: constructState(state.studyCreation),\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    page1Dispatch: {\n      onChange: (name, event) => {\n        onElementChange(dispatch, name, event);\n      },\n      onNext: () => {\n        dispatch(studyCreationAction.showPage(2));\n      },\n      onPrev: () => {\n      },\n    },\n    page2Dispatch: {\n      onCreateCard: () => {\n        dispatch(studyCreationAction.addCard(Date.now()));\n      },\n      onCardNameChange: (id, event) => {\n        const name = event.target.value;\n        dispatch(studyCreationAction.changeCardName(id, name));\n      },\n      onCardDescriptionChange: (id, event) => {\n        const description = event.target.value;\n        dispatch(studyCreationAction.changeCardDescription(id, description));\n      },\n      onNext: () =>{\n        dispatch(studyCreationAction.showPage(3));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(1));\n      },\n    },\n    page3Dispatch: {\n      onMessageChange: (e) => {\n        const message = e.target.value;\n        dispatch(studyCreationAction.changeThanksMessage(message));\n      },\n      onNext: (study) =>{\n        dispatch(studyCreationAction.sendStudy(study));\n      },\n      onPrev: () => {\n        dispatch(studyCreationAction.showPage(2));\n      },\n    },\n  };\n};\n\nconst PopulateCreateStudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(StudyCreationContainer);\n\nexport default PopulateCreateStudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport PopulateCreateStudyContainer \n  from '../elements/containers/PopulateCreateStudyContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study creation page.\n */\nconst CreateStudy = ({history}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <PopulateCreateStudyContainer history={history}/>\n    </main>);\n};\n\nexport default CreateStudy;\n","import {connect} from 'react-redux';\n\nimport CreateStudy from './CreateStudy.jsx';\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    history: ownProps.history,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n  };\n};\n\nconst CreateStudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(CreateStudy);\n\nexport default CreateStudyContainer;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst StudyMenu = ({selectedNo, onClicks}) => {\n  const styles = [];\n  for (let i = 0; i < 5; i++) {\n    styles[i] = '';\n  }\n  styles[selectedNo] = 'selected';\n\n  return (\n    <div className=\"study-menu\">\n      <button onClick={onClicks.participant} className={styles[0]}>\n        {L.text.participant}</button>\n      <button onClick={onClicks.cards} className={styles[1]}>\n        {L.text.cards}</button>\n      <button onClick={onClicks.categories} className={styles[2]}>\n        {L.text.categories}</button>\n      <button onClick={onClicks.similarityMatrix} className={styles[3]}>\n        {L.text.similarityMatrix}</button>\n      <button onClick={onClicks.clusters} className={styles[4]}>\n        {L.text.clusters}</button>\n    </div>);\n};\n\nStudyMenu.propsTypes = {\n  selectedNo: PropTypes.number.isRequired,\n  onClick: PropTypes.object.isRequired,\n};\n\nexport default StudyMenu;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst DataTable = ({headers, data}) => {\n  return (\n    <div className=\"data-container\">\n      <table>\n        <thead>\n          <tr>\n            {\n              headers.map((header) =>\n                <th key={'header'+header}>{header}</th>)\n            }\n          </tr>\n        </thead>\n        <tbody>\n          {\n            data.map((line) =>\n              <tr key={'line'+line}>\n                {\n                  line.map((item, index) =>\n                    <td key={'item'+index}>{item}</td>\n                  )\n                }\n              </tr>\n            )\n          }\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nDataTable.propTypes = {\n  headers: PropTypes.arrayOf(String).isRequired,\n  data: PropTypes.arrayOf(Array).isRequired,\n};\n\nexport default DataTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport L from '../../../localization/LocalizedText';\n\nconst BarGraph = ({percentage, sub, total, entity, action}) => {\n  return (\n    <div className=\"bar-graph-container\">\n      <p>{L.text.completion}</p>\n      <div className=\"graphic\">\n        <div className=\"completion\" style={{height: percentage}}>\n        </div>\n        <div className=\"index\" style={{bottom: percentage}}>\n          <p>{percentage}</p>\n        </div>\n      </div>\n      <div className=\"description\">\n        <p><span className=\"emphasized\">{sub}</span> {L.text.outOf} <span\n          className=\"emphasized\">{total}</span> {entity}</p>\n        <p>{action}</p>\n      </div>\n    </div>\n  );\n};\n\nBarGraph.propTypes = {\n  percentage: PropTypes.string.isRequired,\n  sub: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  entity: PropTypes.string.isRequired,\n  action: PropTypes.string.isRequired,\n};\n\nexport default BarGraph;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nimport StudyMenu from '../components/studyPageElements/StudyMenu.jsx';\nimport DataTable from '../components/studyPageElements/DataTable.jsx';\nimport BarGraph from '../components/studyPageElements/BarGraph.jsx';\nimport L from '../../localization/LocalizedText';\n\n/**\n * \n */\nclass Study extends Component {\n  /**\n   *\n   */\n  componentDidMount() {\n    this.props.loadStudy();\n  }\n\n  /**\n   *\n   * @return {ReactDOM}\n   */\n  render() {\n    const {isFetching, title, isLive, launched, menuValues,\n      menuDispatch, graphValues, tableValues, tableDispatch} = this.props;\n\n    if (isFetching || isFetching === undefined) {\n      return <p>Loading...</p>;\n    }\n\n    return (\n      <div className=\"study-page\">\n        <span className=\"header\">\n          <h1>{title}</h1>\n          <button className=\"edit\"></button>\n        </span>\n        <span className=\"active\">\n          {\n            isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare isLive'></span>\n              <p>{L.text.active}</p>\n            </div>\n          }\n          {\n            !isLive &&\n            <div className=\"active-container\">\n              <span className='activeSquare notLive'></span>\n              <p>{L.text.inactive}</p>\n            </div>\n          }\n          <h2 className=\"date\">{L.text.launchedOn} {launched.getDate()} {\n            launched.getMonth()} {launched.getFullYear()}</h2>\n        </span>\n        <StudyMenu selectedNo={menuValues.selectedNo} onClicks=\n          {menuDispatch.onClicks}/>\n        <div className=\"content\">\n          <BarGraph percentage={graphValues.percentage} sub={graphValues.sub}\n            total={graphValues.total} entity={graphValues.entity}\n            action={graphValues.action}/>\n          <DataTable headers={tableValues.headers} data={tableValues.data}/>\n        </div>\n      </div>\n    );\n  };\n}\n\nStudy.propTypes = {\n  title: PropTypes.string,\n  isLive: PropTypes.bool,\n  launched: PropTypes.objectOf(Date),\n  menuValues: PropTypes.object.isRequired,\n  menuDispatch: PropTypes.object.isRequired,\n  graphValues: PropTypes.object.isRequired,\n  tableValues: PropTypes.object.isRequired,\n  tableDispatch: PropTypes.object.isRequired,\n};\n\nexport default Study;\n","import fetch from 'cross-fetch';\nimport * as StatusEnum from '../static/StatusEnum';\nimport auth from '../auth/authenticator';\nimport debugConsole from '../debug/debugConsole';\nimport api from './api';\n\nexport const CHANGE_VIEW = 'CHANGE_VIEW';\nexport const LOAD_STUDY = 'LOAD_STUDY';\n\n/**\n * Changes the view that the study page is showing.\n * @param {Number} viewNo\n * @return {JSON} the action.\n */\nexport function changeView(viewNo) {\n  return {\n    type: CHANGE_VIEW,\n    payload: {\n      no: viewNo,\n    },\n    error: false,\n  };\n}\n\n/**\n * Async action for loading a study, given an id.\n * @param {StatusEnum} status\n * @param {JSON} response\n * @param {Error} error\n * @return {JSON} the action.\n */\nexport function loadStudy(status, response, error) {\n  return {\n    type: LOAD_STUDY,\n    payload: {\n      status: status,\n      study: response,\n    },\n    error: error,\n  };\n}\n\n/* Thunk actions */\n\n/**\n * @param {String} id\n * @return {func}\n */\nexport function fetchStudy(id) {\n  return function(dispatch) {\n    dispatch(loadStudy(StatusEnum.IS_FETCHING));\n    fetch(api+'/studies_endpoint?id='+id, {\n      method: 'GET',\n      withCredentials: true,\n      credentials: 'include',\n      headers: {\n        'Authorization': auth.getToken(),\n        'Access-Control-Allow-Credentials': true,\n      },\n    })\n        .then(\n            (response) => response.json().then((json) => {\n              if (response.status === 401) {\n                // Redirect\n                setTimeout(window.location.reload(true), 1000);\n                window.location.replace(json.location);\n              } else {\n                dispatch(loadStudy(StatusEnum.SUCCESS, json.study));\n              }\n            }\n            )\n        );\n  };\n}\n","import {connect} from 'react-redux';\n\nimport Study from '../components/Study.jsx';\nimport L from '../../localization/LocalizedText';\nimport * as studyAction from '../../actions/studyPageAction';\n\n/**\n * Finds the proper header strings based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the headers for the selected item.\n */\nfunction getHeaders(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return [\n        L.text.participantNo,\n        L.text.timeTaken,\n        L.text.cardsSorted,\n        L.text.categoriesCreated,\n      ];\n    }\n    case 1: {\n      return [\n        L.text.card,\n        L.text.categoriesNo,\n        L.text.categories,\n        L.text.frequency,\n      ];\n    }\n    case 2: {\n      return [\n        L.text.category,\n        L.text.cardsNo,\n        L.text.cards,\n        L.text.frequency,\n        L.text.participants,\n      ];\n    }\n    default: {\n      return [];\n    }\n  }\n}\n\n/**\n * Finds the proper graph values based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {[]} the array containing the values for the graph element.\n */\nfunction getGraphValues(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return {\n        percentage: state.study.participants.completion,\n        sub: state.study.participants.completed,\n        total: state.study.participants.total,\n        entity: L.text.users,\n        action: L.text.completedTheStudy,\n      };\n    }\n    case 1: {\n      return {\n        percentage: state.study.cards.average,\n        sub: state.study.cards.sorted,\n        total: state.study.cards.total,\n        entity: L.text.cards,\n        action: L.text.wereSorterInAverage,\n      };\n    }\n    case 2: {\n      return {\n        percentage: state.study.categories.similarity,\n        sub: state.study.categories.similar,\n        total: state.study.categories.total,\n        entity: L.text.categories,\n        action: L.text.couldBeMergedInto,\n      };\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\n/**\n * Finds the proper data based on the selected item on the study menu.\n * @param {ReduxState} state\n * @return {String[]} the array containing the arrays of the data for\n * the selected item.\n */\nfunction getData(state) {\n  switch (state.study.selectedItem) {\n    case 0: {\n      return state.study.participants.data;\n    }\n    case 1: {\n      return state.study.cards.data;\n    }\n    case 2: {\n      return state.study.categories.data;\n    }\n    default: {\n      return {};\n    }\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isFetching: state.study.isFetching,\n    title: state.study.title,\n    isLive: state.study.isLive,\n    launched: state.study.launchedDate,\n    menuValues: {\n      selectedNo: state.study.selectedItem,\n    },\n    graphValues: getGraphValues(state),\n    tableValues: {\n      headers: getHeaders(state),\n      data: getData(state),\n    },\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => {\n  return {\n    loadStudy: () => dispatch(studyAction.fetchStudy(ownProps.id)),\n    menuDispatch: {\n      onClicks: {\n        participant: () => {\n          dispatch(studyAction.changeView(0));\n        },\n        cards: () => {\n          dispatch(studyAction.changeView(1));\n        },\n        categories: () => {\n          dispatch(studyAction.changeView(2));\n        },\n        similarityMatrix: () => {\n        },\n        clusters: () => {\n        },\n      },\n    },\n    tableDispatch: {\n\n    },\n  };\n};\n\nconst StudyContainer = connect(\n    mapStateToProps,\n    mapDispatchToProps,\n)(Study);\n\nexport default StudyContainer;\n","// eslint-disable-next-line no-unused-vars\nimport React from 'react';\n\n// eslint-disable-next-line no-unused-vars\nimport Header from '../elements/containers/HeaderContainer.jsx';\n// eslint-disable-next-line no-unused-vars\nimport StudyContainer from '../elements/containers/StudyContainer.jsx';\nimport demoImage from '../demo/profile.jpeg';\n\n/**\n * @return {ReactDOM} The study page.\n */\nconst StudyPage = ({history, match}) => {\n  return (\n    <main>\n      <Header username='John' profilePic={demoImage}/>\n      <StudyContainer id={match.params.id}/>\n    </main>);\n};\n\nexport default StudyPage;\n","\n/**\n * Represents the data model of the study-card object, found in the main page\n */\nexport default class StudyCard {\n  /**\n   *\n   * @param {Number} id\n   * @param {String} title\n   * @param {Boolean} isLive\n   * @param {Number} completedNo\n   * @param {Number} abandonedNo\n   * @param {Date} launchedDate\n   * @param {Date} editDate\n   * @param {Date} endDate\n   */\n  constructor(id, title, isLive, completedNo, abandonedNo,\n      launchedDate, editDate, endDate) {\n    this.id = id;\n    this.title = title;\n    this.isLive = isLive;\n    this.completedNo = completedNo;\n    this.abandonedNo = abandonedNo;\n    this.launchedDate = launchedDate;\n    this.editDate = editDate;\n    this.endDate = endDate;\n  }\n}\n","import {combineReducers} from 'redux';\n\nimport headerReducer from './headerReducer';\nimport studyReducer from './studyReducer';\nimport studyCreationReducer from './studyCreationReducer';\nimport studyPageReducer from './studyPageReducer';\n\nconst app = combineReducers({\n  header: headerReducer,\n  studies: studyReducer,\n  studyCreation: studyCreationReducer,\n  study: studyPageReducer,\n});\n\nexport default app;\n","import * as headerActions from '../actions/headerAction';\n\n/**\n *\n * @param {headerState} state\n * @param {headerActions} action\n * @return {headerState}\n */\nexport default function headerReducer(state={}, action) {\n  switch (action.type) {\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyAction';\nimport StudyCard from '../elements/StudyCard';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDIES: {\n      const newState = Object.assign({}, state);\n\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        if (!action.payload.studies || action.payload.studies.length === 0) {\n          newState.studies = [];\n        } else {\n          newState.studies = action.payload.studies.map(\n              ({id, title, isLive, completedNo, abandonedNo,\n                launchedDate, editDate, endDate}) => new StudyCard(\n                  id, title, isLive, completedNo, abandonedNo,\n                  new Date(launchedDate),\n                  new Date(editDate),\n                  !isLive? new Date(endDate) : undefined\n              )\n          );\n        };\n      }\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.ADD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n\n      newState.studies.push(new StudyCard(\n          study.id, study.title, study.isLive, study.completedNo,\n          study.abandonedNo,\n          new Date(study.launchedDate),\n          new Date(study.editDate),\n          undefined));\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as StatusEnum from '../static/StatusEnum';\nimport * as studyCreationActions from '../actions/studyCreationAction';\n\n/**\n *\n * @param {boardState} state\n * @param {cardActions} action\n * @return {boardState}\n */\nexport default function studyCreationReducer(state={}, action) {\n  switch (action.type) {\n    case studyCreationActions.CHANGE_TITLE: {\n      return Object.assign({}, state, {\n        'title': action.payload.title,\n      });\n    }\n    case studyCreationActions.CHANGE_DESCRIPTION: {\n      return Object.assign({}, state, {\n        'description': action.payload.description,\n      });\n    }\n    case studyCreationActions.CHANGE_URL: {\n      return Object.assign({}, state, {\n        'url': action.payload.url,\n      });\n    }\n    case studyCreationActions.ADD_CARD: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id] = {\n        id: action.payload.id,\n        title: undefined,\n        description: undefined,\n      };\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_NAME: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].name =\n        action.payload.name;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_CARD_DESCRIPTION: {\n      const newState = Object.assign({}, state);\n      newState['cards'][action.payload.id].description =\n        action.payload.description;\n      return newState;\n    }\n    case studyCreationActions.CHANGE_THANKS_MESSAGE: {\n      return Object.assign({}, state, {\n        'thanksMessage': action.payload.message,\n      });\n    }\n    case studyCreationActions.SHOW_PAGE: {\n      const newState = Object.assign({}, state);\n      newState['ui'].currentPage = action.payload.pageNo;\n      return newState;\n    }\n    case studyCreationActions.CHECK_TITLE: {\n      const newState = Object.assign({}, state);\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.ui.validTitle = action.payload.validTitle;\n      }\n      newState.ui.titleFetching = action.payload.status;\n      return newState;\n    }\n    case studyCreationActions.CREATE_STUDY: {\n      const newState = Object.assign({}, state);\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.ui.currentPage = -1;\n      }\n      newState.ui.studySending = action.payload.status;\n      return newState;\n    }\n    default: {\n      return state;\n    }\n  }\n}\n","import * as studyActions from '../actions/studyPageAction';\nimport * as StatusEnum from '../static/StatusEnum';\n\n/**\n *\n * @param {stateSchema} state\n * @param {studyPageAction} action\n * @return {stateSchema}\n */\nexport default function studyPageReducer(state={}, action) {\n  switch (action.type) {\n    case studyActions.LOAD_STUDY: {\n      const newState = Object.assign({}, state);\n      const study = action.payload.study;\n      if (action.payload.status === StatusEnum.SUCCESS) {\n        newState.id = study.id;\n        newState.title = study.title;\n        newState.isLive = study.isLive;\n        newState.launchedDate = new Date(study.launchedDate);\n        newState.ended = study.ended ? new Date(study.ended): undefined;\n        newState.participants = {\n          completion: study.sort ? study.participants.completion: '0%',\n          total: study.sort ? study.participants.total: 0,\n          completed: study.sort ? study.participants.completed: 0,\n          data: study.sort ? study.participants.data: [],\n        };\n        newState.cards = {\n          average: study.sort ? study.cards.average: '0%',\n          total: study.sort ? study.cards.total: 0,\n          sorted: study.sort ? study.cards.sorted: 0,\n          data: study.sort ? study.cards.data: [],\n        };\n        newState.categories = {\n          similarity: study.sort ? study.categories.similarity: '0%',\n          total: study.sort ? study.categories.total: 0,\n          similar: study.sort ? study.categories.similar: 0,\n          merged: study.sort ? study.categories.merged: 0,\n          data: study.sort ? study.categories.data: [],\n        };\n      }\n\n      newState.isFetching = action.payload.status !== StatusEnum.SUCCESS;\n      return newState;\n    }\n    case studyActions.CHANGE_VIEW: {\n      return Object.assign({}, state, {\n        'selectedItem': action.payload.no,\n      });\n    }\n    default: {\n      return state;\n    }\n  };\n}\n","const initialState = {\n  header: {\n  },\n  studies: {\n    isFetching: undefined,\n    didInvalidate: undefined,\n    studies: [],\n  },\n  studyCreation: {\n    title: 'Title',\n    description: 'Description',\n    urlPrefix: 'cardsorter.com/sort/user/',\n    url: 'Title',\n    cards: {\n      1: {\n        id: 1,\n        name: undefined,\n        description: undefined,\n      },\n    },\n    thanksMessage: 'Thanks',\n    ui: {\n      currentPage: 1,\n      titleFetching: undefined,\n      validTitle: true,\n      studySending: undefined,\n    },\n  },\n  study: {\n    isFetching: undefined,\n    id: undefined,\n    title: undefined,\n    isLive: undefined,\n    launchedDate: undefined,\n    ended: undefined,\n    selectedItem: 0,\n    participants: {\n      completion: undefined,\n      total: undefined,\n      completed: undefined,\n      data: [],\n    },\n    cards: {\n      average: undefined,\n      total: undefined,\n      sorted: undefined,\n      data: [],\n    },\n    categories: {\n      similarity: undefined,\n      total: undefined,\n      similar: undefined,\n      merged: undefined,\n      data: [],\n    },\n  },\n};\n\nexport default initialState;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter as Router, Route} from 'react-router-dom';\nimport {Provider} from 'react-redux';\n\nimport './index.css';\nimport Main from './pages/Main.jsx';\nimport CreateStudy from './pages/CreateStudyContainer.jsx';\nimport StudyPage from './pages/StudyPage.jsx';\nimport initializeStore from './Store';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = initializeStore();\nReactDOM.render(\n    <Provider store={store}>\n      <Router>\n        <Route exact path='/' component={Main}/>\n        <Route path='/create' component={CreateStudy}/>\n        <Route path='/study/:id' component={StudyPage}/>\n      </Router>\n    </Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import {applyMiddleware, createStore} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport logger from 'redux-logger';\n\nimport app from './reducers/indexReducer';\nimport initialState from './reducers/stateSchema';\nimport localizedText from './localization/LocalizedText';\n\nimport {fetchStudies} from './actions/studyAction';\nimport {runTests} from './tests/simpleImporting';\n\n/**\n * @return {Store}\n */\nexport default function initializeStore() {\n  const store = createStore(app, initialState, applyMiddleware(\n      thunkMiddleware,\n      logger));\n  // const store = createStore(app, window.STATE_FROM_SERVER);\n  localizedText.initialize('en-us');\n\n  const unsuscribe = store.subscribe(() => {});\n\n  // runTests(store);\n  store.dispatch(fetchStudies());\n\n\n  unsuscribe();\n  return store;\n}\n"],"sourceRoot":""}